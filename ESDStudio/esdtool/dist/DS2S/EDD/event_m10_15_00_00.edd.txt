1000: [Insect key] For lantern lighting
1000_s0: Start state
1000_s1: Finish
1000_s1_e0: [System] Termination notification
1000_s2: [Lib] [Asynchronous] [Preset] Bug key (wall) _SubState
2000: During the mirror night
2000_s0: Start state
2000_s1: Rerun
2000_s1_e0: [System] Re-execution notification
2000_s2: [Preset] Mirror Night _SubState
3000: An enemy trapped in the orientation comes out
3000_s0: Start state
3000_s1: Finish
3000_s1_e0: [System] Termination notification
3000_s2: [Preset] Enemies start when entering a giant trap or _SubState
4010: Elevator lever _ top
4010_s0: Start state
4010_s1: Rerun
4010_s1_e0: [System] Re-execution notification
4010_s2: [Lib] [Preset] Elevator lever_SubState
4020: Elevator lever_bottom
4020_s0: Start state
4020_s1: Rerun
4020_s1_e0: [System] Re-execution notification
4020_s2: [Lib] [Preset] Elevator lever_SubState
4000: Elevator Guardian Dragon's Nest
4000_s0: Start state
4000_s1: Rerun
4000_s1_e0: [System] Re-execution notification
4000_s2: [Lib] [Preset] Elevator_SubState
5000: Ogre_ Petrochemical Stop_Key Guide
5000_s0: Start state
5000_s1: Finish
5000_s1_e0: [System] Termination notification
5000_s2: [Lib] Character: Petrified: Key Guide_SubState
5000_s3: Character: Petrified: Key Guide_SubState
6000: Mirror Night Mirror_1
6000_s0: Start state
6000_s1: Finish
6000_s1_e0: [System] Termination notification
6000_s2: [Preset] Mirror Night Mirror_SubState
6030: Mirror Knight Mirror_4
6030_s0: Start state
6030_s1: Finish
6030_s1_e0: [System] Termination notification
6030_s2: [Preset] Mirror Night Mirror_SubState
111272: OBJ: Woman Knight (Andiel's Hall): Grave
111272_s0: Start state
111272_s1: [Lib] NPC: Grave Placement: General Purpose_SubState
111273: OBJ: Woman Knight (Andiel's Hall): Key Guide
111273_s0: Start state
111273_s1: [Lib] NPC: Grave: Key Guide: General Purpose_SubState
111274: OBJ: Woman Knight (Andyle Hall): Death Determination
111274_s0: Start state
111274_s1: [Lib] NPC: Death determination: General purpose_SubState
111432: NPC: Enclosed Person: Tomb
111432_s0: Start state
111432_s1: [Lib] NPC: Grave Placement: General Purpose_SubState
111433: NPC: Sealed Person: Key Guide
111433_s0: Start state
111433_s1: [Lib] NPC: Grave: Key Guide: General Purpose_SubState
111276: OBJ: Woman Knight (Andiel's Hall): Appearance Judgment
111276_s0: Start state
111276_s1: Appearance determination: Start
111276_s1_e0: [Group condition: Map] Judgment that the player is in the map
111276_s2: Appearance determination: System: End
111276_s2_e0: [System] Termination notification
111276_s3: Appearance determination: Generation stop determination
111276_s3_e0: [Group condition: Flag] Event flag comparison
111276_s4: Appearance determination: Adversity determination
111276_s4_e0: [Group condition: Flag] Event flag comparison
111276_s4_e1: [Group condition: Flag] Event flag comparison
111276_s4_e2: [Group condition: Flag] Event flag comparison
111276_s4_e3: [Group condition: Flag] Event flag comparison
111276_s5: Appearance determination: Other map generation stop determination
111276_s5_e0: [Group condition: Flag] Event flag comparison
111276_s5_e1: [Group condition: Flag] Event flag comparison
111276_s5_e2: [Group condition: Flag] Event flag comparison
111276_s5_e3: [Group condition: Flag] Event flag comparison
111276_s6: Appearance judgment: Appearance impossible
111276_s6_e0: [Flag] Set flag
111276_s6_e1: [Group condition: Flag] Event flag comparison
111276_s7: Appearance determination: Appearance allowed
111276_s7_e0: [Flag] Set flag
111276_s7_e1: [Group condition: Flag] Event flag comparison
111276_s8: Appearance determination: Death determination
111276_s8_e0: [Group condition: Flag] Event flag comparison
7000: Boss: Wyvern _ Battle
7000_s0: Start state
7000_s1: Finish
7000_s1_e0: [System] Termination notification
7000_s2: [Lib] [Preset] Boss Battle Cut Scene No _SubState
1010: [Insect key activation] Lantern lights
1010_s0: Start state
1010_s1: Finish
1010_s1_e0: [System] Termination notification
1010_s2: [Preset] Lantern lights_SubState
8000: Bone Dragon Death Treatment
8000_s0: Start state
8000_s1: Finish
8000_s1_e0: [System] Termination notification
8000_s2: [Preset] Bone Dragon's Death Process_SubState
9000: Wall destruction auger activation_1
9000_s0: Start state
9000_s1: Finish
9000_s1_e0: [System] Termination notification
9000_s2: [Preset] Wall destruction auger start event _SubState
10000: Enemy generation when cart is destroyed_1
10000_s0: Start state
10000_s1: Finish
10000_s1_e0: [System] Termination notification
10000_s2: [Preset] Enemy generated when cart is destroyed _SubState
10010: Enemy generation when cart is destroyed_2
10010_s0: Start state
10010_s1: Finish
10010_s1_e0: [System] Termination notification
10010_s2: [Preset] Enemy generated when cart is destroyed _SubState
10020: Enemy generation when destroying cart _3
10020_s0: Start state
10020_s1: Finish
10020_s1_e0: [System] Termination notification
10020_s2: [Preset] Enemy generated when cart is destroyed _SubState
11000: Gimmick door in the middle of the map
11000_s0: Start state
11000_s1: Rerun
11000_s1_e0: [System] Re-execution notification
11000_s2: Wait for initialization event to end
11000_s3: [Preset] Map middle gimmick door_SubState
11010: Gimmick door in the middle of the map_initialization
11010_s0: Start state
11010_s1: Finish
11010_s1_e0: [System] Termination notification
11010_s2: [BEST] Relief event finished?
11010_s3: [Preset] Map middle door_initialization_SubState
12000: Switch enemy display with gimmick door
12000_s0: Start state
12000_s1: Rerun
12000_s1_e0: [System] Re-execution notification
12000_s2: Is the initialization event finished?
12000_s3: [Preset] Enemy display switching at the gimmick door_SubState
9010: Wall breaking auger activation_2
9010_s0: Start state
9010_s1: Finish
9010_s1_e0: [System] Termination notification
9010_s2: [Preset] Wall destruction auger start event _SubState
12010: Enemy display switching_initialization
12010_s0: Start state
12010_s1: Finish
12010_s1_e0: [System] Termination notification
12010_s2: [BEST] Relief event finished?
12010_s3: [Preset] Enemy display switching_initialization_SubState
6040: Mirror Night Mirror_5
6040_s0: Start state
6040_s1: Finish
6040_s1_e0: [System] Termination notification
6040_s2: [Preset] Mirror Night Mirror_SubState
13000: Sealed person
13000_s0: Start state
13000_s1: Finish
13000_s1_e0: [System] Termination notification
13000_s2: [Preset] Enclosed Person_SubState
4030: Elevator_Connection replacement
4030_s0: Start state
4030_s1: Rerun
4030_s1_e0: [System] Re-execution notification
4030_s2: [Lib] [Preset] Elevator_Read Connection_SubState
14000: The door that opens with the key of Anne Deal
14000_s0: Start state
14000_s1: Finish
14000_s1_e0: [System] Termination notification
14000_s2: [Lib] Item specified door unlocking_SubState
15000: Wall 1 visible on the door
15000_s0: Start state
15000_s1: Rerun
15000_s1_e0: [System] Re-execution notification
15000_s2: [Preset] Wall visible through the door_SubState
16000: Hidden door navigation mesh changes
16000_s0: Start state
16000_s1: Finish
16000_s1_e0: [System] Termination notification
16000_s2: [Lib] [Preset] Switch Navimesh according to OBJ state_SubState
15010: Wall 2 visible on the door
15010_s0: Start state
15010_s1: Rerun
15010_s1_e0: [System] Re-execution notification
15010_s2: [Preset] Wall visible through the door_SubState
17000: Switching the wall to be destroyed by the guided auger
17000_s0: Start state
17000_s1: Finish
17000_s1_e0: [System] Termination notification
17000_s2: [Lib] [Preset] Switch Navimesh according to OBJ state_SubState
80000: Fireworks for Regeneration 01_ Entrance building
80000_s0: Start state
80000_s1: Finish
80000_s1_e0: [System] Termination notification
80000_s2: [Lib] [Preset] Reproduction fire _SubState
81000: Rebirth Fire 02_Staircase hidden door room to basement
81000_s0: Start state
81000_s1: Finish
81000_s1_e0: [System] Termination notification
81000_s2: [Lib] [Preset] Reproduction fire _SubState
5010: Ogre _ Petrification stop_ Appearance setting
5010_s0: Start state
5010_s1: Finish
5010_s1_e0: [System] Termination notification
5010_s2: [Lib] Character: Petrified: Appearance setting_SubState
5020: Auger _ petrification stop _ navigation switching
5020_s0: Start state
5020_s1: Finish
5020_s1_e0: [System] Termination notification
5020_s2: [Lib] [Preset] Navigation mesh switching by flag judgment_SubState
111435: NPC: Enclosed Person: Black Phantom Appearance
111435_s0: Start state
111435_s1: [Lib] NPC Black Phantom Appearance: Online_SubState
118210: Multi-use NPC: Shinigami (Female): Black Phantom Appears
118210_s0: Start state
118210_s1: [Lib] NPC Black Phantom Appearance: Online: Unconditional_SubState
20000: Disabling damage
20000_s0: Start state
20000_s1: Finish
20000_s1_e0: [System] Termination notification
20000_s2: Disabling the damage floor
20000_s2_e0: [Bullet] Damage invalid setting (generator ID specification)
20000_s2_e1: [Bullet] Damage invalid setting (generator ID specification)
20000_s2_e2: [Bullet] Damage invalid setting (generator ID specification)
20000_s3: [DC] Large shield warrior petrified
20000_s3_e0: [Bullet] Damage invalid setting (generator ID specification)
20000_s3_e1: [Bullet] Damage invalid setting (generator ID specification)
18000: Starting conditions for an auger at the foot of the aisle
18000_s0: Start state
18000_s1: Finish
18000_s1_e0: [System] Termination notification
18000_s2: [Preset] Startup condition of the auger and reinforced immortal at the foot of the passage_SubState
18010: Activation conditions for reinforced immortals at the foot of the aisle
18010_s0: Start state
18010_s1: Finish
18010_s1_e0: [System] Termination notification
18010_s2: [Preset] Startup condition of the auger and reinforced immortal at the foot of the passage_SubState
21010: The door is destroyed when the wall is destroyed_1
21010_s0: Start state
21010_s1: Finish
21010_s1_e0: [System] Termination notification
21010_s2: [Preset] Destroy the door when the wall breaks_SubState
22000: The door is destroyed when the wall is destroyed_2
22000_s0: Start state
22000_s1: Finish
22000_s1_e0: [System] Termination notification
22000_s2: [Preset] Destroy the door when the wall breaks_SubState
21000: Wall and door to be destroyed by guided auger
21000_s0: Start state
21000_s1: Finish
21000_s1_e0: [System] Termination notification
21000_s2: [Lib] [Preset] Switch Navimesh according to OBJ state_SubState
120130: Trophy: Akertyra
120130_s0: Start state
120130_s1: System: Exit
120130_s1_e0: [System] Termination notification
120130_s2: [Lib] [Preset] Get Trophy_SubState
23000: The enemy behind the painting starts 1
23000_s0: Start state
23000_s1: Finish
23000_s1_e0: [System] Termination notification
23000_s2: [Preset] The enemy behind the painting is activated_SubState
23010: The enemy behind the painting starts 2
23010_s0: Start state
23010_s1: Finish
23010_s1_e0: [System] Termination notification
23010_s2: [Preset] The enemy behind the painting is activated_SubState
23020: The enemy behind the painting starts 3
23020_s0: Start state
23020_s1: Finish
23020_s1_e0: [System] Termination notification
23020_s2: [Preset] The enemy behind the painting is activated_SubState
24000: Navi mesh change of the king's door
24000_s0: Start state
24000_s1: Rerun
24000_s1_e0: [System] Re-execution notification
24000_s2: Finish
24000_s2_e0: [System] Termination notification
24000_s3: [Preset] Change the king's door navigation mesh_SubState
4050: For connection_Connection flag OFF
4050_s0: Start state
4050_s1: Rerun
4050_s1_e0: [System] Re-execution notification
4050_s2: Finish
4050_s2_e0: [System] Termination notification
4050_s3: [Lib] [Preset] Switch the connection flag at the point _SubState
4000000: [BEST] Gimmick door in the middle of the map_Relief
4000000_s0: Start state
4000000_s1: Finish
4000000_s1_e0: [System] Termination notification
4000000_s2: [BEST] [Preset] Map middle gimmick door_Relief_SubState
118100: White spirit sign display
118100_s0: Start state
118100_s1: [Lib] NPC White Phantom Appearance: Unconditional_SubState
4001000: [DC] Lever is completely destroyed when lever is activated
4001000_s0: Start state
4001000_s1: Finish
4001000_s1_e0: [System] Termination notification
4001000_s2: [DC] [Preset] Deactivation of lever by lever activation_SubState
4002000: [DC] Enemies linked to lighthouses and lanterns_1
4002000_s0: Start state
4002000_s1: Finish
4002000_s1_e0: [System] Termination notification
4002000_s2: [DC] [Preset] Lantern lit by destroying enemies linked to the lighthouse_SubState
4002000_s3: [DC] [Preset] Enemies generated by lighthouse lighting_SubState
4002010: [DC] Enemies linked to lighthouses and lanterns_2
4002010_s0: Start state
4002010_s1: Finish
4002010_s1_e0: [System] Termination notification
4002010_s2: [DC] [Preset] Lantern lit by destroying enemies linked to the lighthouse_SubState
4002010_s3: [DC] [Preset] Enemies generated by lighthouse lighting_SubState
4002020: [DC] Enemy _3 linked with lighthouse and lantern
4002020_s0: Start state
4002020_s1: Finish
4002020_s1_e0: [System] Termination notification
4002020_s2: [DC] [Preset] Lantern lit by destroying enemies linked to the lighthouse_SubState
4002020_s3: [DC] [Preset] Enemies generated by lighthouse lighting_SubState
4002030: [DC] Enemy _4 linked with lighthouse and lantern
4002030_s0: Start state
4002030_s1: Finish
4002030_s1_e0: [System] Termination notification
4002030_s2: [DC] [Preset] Lantern lit by destroying enemies linked to the lighthouse_SubState
4002030_s3: [DC] [Preset] Enemies generated by lighthouse lighting_SubState
4003000: [DC] All lantern lighting
4003000_s0: Start state
4003000_s1: Finish
4003000_s1_e0: [System] Termination notification
4003000_s2: [DC] [Preset] All lantern lighting judgment_SubState
4004000: [DC] Lock Door Opened with "Anne Deal Key" _2
4004000_s0: Start state
4004000_s1: Finish
4004000_s1_e0: [System] Termination notification
4004000_s2: [Lib] Item specified door unlocking_SubState
4005000: [DC] Traveler's Dead _ Petrochemical Stop 1_ Key Guide
4005000_s0: Start state
4005000_s1: Finish
4005000_s1_e0: [System] Termination notification
4005000_s2: [Lib] Character: Petrified: Key Guide_SubState
4005010: [DC] Traveller's Dead _ Petrification Stop 1_ Appearance Setting
4005010_s0: Start state
4005010_s1: Finish
4005010_s1_e0: [System] Termination notification
4005010_s2: [Lib] Character: Petrified: Appearance setting_SubState
4005020: [DC] Traveler dead _ petrochemical stop 1_ switch navigation
4005020_s0: Start state
4005020_s1: Finish
4005020_s1_e0: [System] Termination notification
4005020_s2: [Lib] [Preset] Navigation mesh switching by flag judgment_SubState
4006000: [DC] Traveler's Dead _ Petrochemical Stop 2_ Key Guide
4006000_s0: Start state
4006000_s1: Finish
4006000_s1_e0: [System] Termination notification
4006000_s2: [Lib] Character: Petrified: Key Guide_SubState
4006010: [DC] Traveller's Dead _ Petrification Stop 2_ Appearance Setting
4006010_s0: Start state
4006010_s1: Finish
4006010_s1_e0: [System] Termination notification
4006010_s2: [Lib] Character: Petrified: Appearance setting_SubState
4006020: [DC] Traveler's Dead _ Petrochemical Stop 2_ Navigation Switch
4006020_s0: Start state
4006020_s1: Finish
4006020_s1_e0: [System] Termination notification
4006020_s2: [Lib] [Preset] Navigation mesh switching by flag judgment_SubState
4030000: [DC] Transparent character_1
4030000_s0: Start state
4030000_s1: Finish
4030000_s1_e0: [System] Termination notification
4030000_s2: [Lib] [DC] [Preset] Transparent character_SubState
4030010: [DC] Transparent character_2
4030010_s0: Start state
4030010_s1: Finish
4030010_s1_e0: [System] Termination notification
4030010_s2: [Lib] [DC] [Preset] Transparent character_SubState
4030020: [DC] Transparent character_3
4030020_s0: Start state
4030020_s1: Finish
4030020_s1_e0: [System] Termination notification
4030020_s2: [Lib] [DC] [Preset] Transparent character_SubState
4007000: [DC] Can't lock with character invincible until 檻 destruction _ Mimic_1
4007000_s0: Start state
4007000_s1: Finish
4007000_s1_e0: [System] Termination notification
4007000_s2: [DC] [Preset] Cannot be locked and invincible until 檻 destruction_SubState
4007010: [DC] Can't lock with character invincible until 檻 destruction _ Mimic_2
4007010_s0: Start state
4007010_s1: Finish
4007010_s1_e0: [System] Termination notification
4007010_s2: [DC] [Preset] Cannot be locked and invincible until 檻 destruction_SubState
4007100: [DC] Cannot lock with character invincible until destruction
4007100_s0: Start state
4007100_s1: Finish
4007100_s1_e0: [System] Termination notification
4007100_s2: [DC] [Preset] Cannot be locked and invincible until 檻 destruction_SubState
4007200: [DC] Character invincible and cannot be locked until 檻 destruction
4007200_s0: Start state
4007200_s1: Finish
4007200_s1_e0: [System] Termination notification
4007200_s2: [DC] [Preset] Cannot be locked and invincible until 檻 destruction_SubState
4007300: [DC] Cannot lock with character invincible until 檻 destruction_Basilisk_1
4007300_s0: Start state
4007300_s1: Finish
4007300_s1_e0: [System] Termination notification
4007300_s2: [DC] [Preset] Cannot be locked and invincible until 檻 destruction_SubState
4031000: [DC] NPC White Spirit_Gesture Management_Wyvern
4031000_s0: Start state
4031000_s1: Finish
4031000_s1_e0: [System] Termination notification
4031000_s2: [Lib] [DC] [Preset] NPC White Spirit_Gesture Management_SubState
x69: [Reproduction] Mirror night mirror state reproduction
x69_p0: Mirror instance ID
x69_s0: Start state
x69_s1: OBJ initialization
x69_s1_e0: [OBJ] Initialize OBJ state
x69_s2: Spiritual determination
x69_s3: End state
x69_s4: Enemy spirit: End
x70: [Conditions] Point intrusion determination
x70_p0: Point ID
x70_s0: Start state
x70_s1: Point intrusion standby
x70_s1_e0: [Group condition: Character] Judgment within player points
x70_s2: End state
x71: [Execute] Mirror Split & Enemy Generation
x71_p0: Mirror instance ID
x71_p1: Operation flag
x71_s0: Start state
x71_s1: Generator operation flag ON
x71_s1_e0: [Flag] Set flag
x71_s2: OBJ state transition: mirror split
x71_s2_e0: [OBJ] OBJ state transition request (with instance ID specified)
x71_s3: End state
x72: [Preset] Mirror Night Mirror
x72_p0: Mirror instance ID
x72_p1: Point ID
x72_p2: Operation flag
x72_s0: Start state
x72_s1: [Reproduction] Mirror night mirror state reproduction_SubState
x72_s2: [Condition] Point intrusion determination_SubState
x72_s3: [Execution] Mirror Split & Enemy Generation_SubState
x72_s4: End state
x73: [Reproduction] Lantern lighting
x73_p0: OBJ instance ID of the bug key
x73_s0: Start state
x73_s1: Is the insect key activated?
x73_s2: Keep all lights on: 20
x73_s2_e0: [OBJ] OBJ state transition request (with instance ID specified)
x73_s2_e1: [OBJ] OBJ state transition request (with instance ID specified)
x73_s2_e2: [OBJ] OBJ state transition request (with instance ID specified)
x73_s2_e3: [OBJ] OBJ state transition request (with instance ID specified)
x73_s2_e4: [OBJ] OBJ state transition request (with instance ID specified)
x73_s2_e5: [OBJ] OBJ state transition request (with instance ID specified)
x73_s3: Not running
x73_s4: Activated
x74: [Condition] Lantern lighting
x74_p0: OBJ instance ID of the bug key
x74_s0: Start state
x74_s1: Waiting for insect key activation
x74_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x74_s2: End state
x75: [Preset] Lantern lights
x75_p0: OBJ instance ID of the bug key
x75_s0: Start state
x75_s1: [Reproduction] Lantern lighting_SubState
x75_s2: [Condition] Lantern lighting_SubState
x75_s3: [Execution] Turning on the lantern_SubState
x75_s4: End state
x76: [Execution] Lighting the lantern
x76_s0: Start state
x76_s1: Lantern 1 lighting: 70
x76_s1_e0: [OBJ] OBJ state transition request (with instance ID specified)
x76_s2: Lantern 2 lighting: 70
x76_s2_e0: [OBJ] OBJ state transition request (with instance ID specified)
x76_s3: Lantern 3 lights: 70
x76_s3_e0: [OBJ] OBJ state transition request (with instance ID specified)
x76_s4: Lantern 4 lighting: 70
x76_s4_e0: [OBJ] OBJ state transition request (with instance ID specified)
x76_s5: Lantern 5 lights: 70
x76_s5_e0: [OBJ] OBJ state transition request (with instance ID specified)
x76_s6: Lantern 6 lights: 70
x76_s6_e0: [OBJ] OBJ state transition request (with instance ID specified)
x76_s7: End state
x77: [Reproduction] Bone Dragon Death Processing
x77_s0: Start state
x77_s1: Host?
x77_s2: host
x77_s3: The guests
x78: [Condition] Death of bone dragon
x78_p0: Bone Dragon Generator ID
x78_p1: Logic flag ID
x78_p2: Logic flag comparison value
x78_s0: Start state
x78_s1: Has the bone dragon finished the assault?
x78_s1_e0: [Group condition: Character] Compare EzState flag of logic
x78_s2: End state
x79: [Execution] Bone Dragon Death Processing
x79_p0: Bone Dragon Generator ID
x79_p1: Item lottery ID
x79_s0: Start state
x79_s1: Bone dragon death treatment key item acquisition
x79_s1_e0: [Character action] Action request to the enemy
x79_s1_e1: [Item] Add item
x79_s2: End state
x80: [Preset] Bone Dragon Death Treatment
x80_p0: Bone Dragon Generator ID
x80_p1: Logic flag ID
x80_p2: Logic flag comparison value
x80_p3: Item lottery ID
x80_s0: Start state
x80_s1: [Reproduction] Bone Dragon Death Processing_SubState
x80_s2: [Execution] Bone Dragon Death Processing_SubState
x80_s3: [Condition] Death process of bone dragon_SubState
x80_s4: End state
x81: [Reproduction] Enemies are activated when they enter a large cage
x81_s0: Start state
x81_s1: Has the cocoon already broken?
x81_s2: Spiritual determination
x81_s3: Destroyed
x81_s4: Not destroyed
x81_s5: Enemy's unreactive spirit
x82: [Condition] Enemies are activated when they enter the ori
x82_p0: Point ID
x82_s0: Start state
x82_s1: Did you enter the or 檻 that attacked the trap?
x82_s1_e0: [Group condition: OBJ] OBJ damage judgment
x82_s1_e1: [Group condition: Character] Judgment within player points
x82_s2: End state
x83: [Execution] Enemies are activated when they enter a large cage or inside
x83_p0: Point ID for Navimesh change
x83_s0: Start state
x83_s1: Enemy activation flag ON
x83_s1_e0: [Flag] Set flag
x83_s2: Navigation mesh change
x83_s2_e0: [Map] Navimesh attribute deletion
x83_s3: End state
x84: [Preset] Enemies are activated when entering or encroaching a giant spear
x84_p0: Point ID for destruction
x84_p1: Destroyed point ID
x84_p2: Point ID for Navimesh change
x84_s0: Start state
x84_s1: [Reproduction] Enemies start up when entering a giant eagle or sub_State
x84_s2: [Condition] Enemies are activated when they enter a large cage or _SubState
x84_s3: [Condition] Enemies start when entering specified area_SubState
x84_s4: [Execution] Enemies are activated when they enter a giant trap or _SubState
x84_s5: [Execution] Navi Change_Enemy Spirit_SubState
x84_s6: [Condition] Enemy activation determination_Enemy Spirit_SubState
x84_s7: End state
x85: [Condition] Enemies start when entering the specified area
x85_p0: Point ID
x85_s0: Start state
x85_s1: Entered the specified area?
x85_s1_e0: [Group condition: Character] Judgment within player points
x85_s2: End state
x86: [Reproduction] Wall destruction auger activation
x86_p0: Wall instance ID
x86_p1: Navigation switching point ID
x86_p2: Auger wall destruction flag
x86_s0: Start state
x86_s1: Has the wall been destroyed?
x86_s2: Navi mesh switching
x86_s2_e0: [Map] Navimesh attribute deletion
x86_s3: Ogre wall destruction flag ON
x86_s3_e0: [Flag] Set flag
x86_s4: Spiritual determination
x86_s5: Destroyed
x86_s6: Not destroyed
x86_s7: Enemy's unreactive spirit
x87: [Condition] Wall breaking auger activation
x87_p0: Point ID
x87_p1: Generator ID
x87_p2: Wall instance ID
x87_p3: Time until entering the point and the auger reacts
x87_s0: Start state
x87_s1: Did the auger meet the conditions to destroy the wall?
x87_s1_e0: [Group condition: Character] Judgment within player points
x87_s1_e1: [Group condition: Character] HP ratio comparison
x87_s1_e2: [Group condition: OBJ] OBJ destruction status judgment
x87_s2: Has a certain time elapsed since entering the point? Or did you damage the auger?
x87_s2_e0: [Group condition: Event] State elapsed time comparison
x87_s2_e1: [Group condition: Character] HP ratio comparison
x87_s3: End state
x87_s4: Wall destruction by normal action
x88: [Execution] Wall destruction auger activation_Wall destruction action flag ON
x88_p0: Auger wall destruction flag
x88_p1: Navigation switching point ID
x88_p2: Wall instance ID
x88_s0: Start state
x88_s1: Ogre wall destruction flag ON
x88_s1_e0: [Flag] Set flag
x88_s2: The wall was broken
x88_s2_e0: [Group condition: OBJ] OBJ destruction status judgment
x88_s3: Navi mesh switching
x88_s3_e0: [Map] Navimesh attribute deletion
x88_s4: End state
x89: [Preset] Wall destruction auger activation
x89_p0: Wall instance ID
x89_p1: Auger wall destruction flag
x89_p2: Point ID
x89_p3: Navigation switching point ID
x89_p4: Generator ID
x89_p5: Time until entering the point and the auger reacts
x89_s0: Start state
x89_s1: [Reproduction] Wall destruction auger activation_SubState
x89_s2: [Condition] Wall destruction auger activation_SubState
x89_s3: [Execution] Wall destruction auger activation_Wall destruction action flag ON_SubState
x89_s4: [Execution] Wall destruction auger activation_Navimesh switching only_SubState
x89_s5: [Condition] Wall destruction auger activation_Enemy Spirit_SubState
x89_s6: [Execution] Wall destruction auger activation_Navimesh switching only_2_SubState
x89_s7: End state
x90: [Reproduction] Enemy generation when cart is destroyed
x90_p0: Cart instance ID
x90_p1: Enemy generation flag
x90_p2: Point ID for Navimesh change
x90_s0: Start state
x90_s1: Is the cart destroyed?
x90_s2: Enemy generation flag ON
x90_s2_e0: [Flag] Set flag
x90_s3: Navigation mesh change
x90_s3_e0: [Map] Navimesh attribute deletion
x90_s4: Destroyed
x90_s5: Not destroyed
x91: [Condition] Enemy is generated when cart is destroyed
x91_p0: Cart instance ID
x91_s0: Start state
x91_s1: Waiting for cart destruction
x91_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x91_s2: End state
x92: [Execution] Enemy generation when cart is destroyed
x92_p0: Enemy generation flag
x92_p1: Point ID for Navimesh change
x92_s0: Start state
x92_s1: Enemy generation flag ON
x92_s1_e0: [Flag] Set flag
x92_s2: Navigation mesh change
x92_s2_e0: [Map] Navimesh attribute deletion
x92_s3: End state
x93: [Preset] Enemy generated when cart is destroyed
x93_p0: Cart instance ID
x93_p1: Enemy generation flag
x93_p2: Point ID for Navimesh change
x93_s0: Start state
x93_s1: [Reproduction] Enemy generation at the time of cart destruction_SubState
x93_s2: [Condition] Enemy generated at the time of cart destruction_SubState
x93_s3: [Execution] Enemies generated when the cart is destroyed _SubState
x93_s4: End state
x94: [Reproduction] Gimmick door in the middle of the map
x94_p0: The instance ID of the lobby door
x94_p1: Instance ID of the aisle door
x94_p2: The instance ID of the lobby lever
x94_p3: Instance ID of the aisle lever
x94_p4: Center lever instance ID
x94_s0: Start state
x94_s1: Judgment of door status
x94_s2: Key guide switching: When the lobby is released
x94_s2_e0: [OBJ] Disable OBJ key guide (specify instance ID)
x94_s2_e1: [OBJ] Disable OBJ key guide (specify instance ID)
x94_s2_e2: [OBJ] Disable OBJ key guide (specify instance ID)
x94_s3: Key guide switching: When aisle is released
x94_s3_e0: [OBJ] Disable OBJ key guide (specify instance ID)
x94_s3_e1: [OBJ] Disable OBJ key guide (specify instance ID)
x94_s3_e2: [OBJ] Disable OBJ key guide (specify instance ID)
x94_s4: Key guide all OFF: Lobby side closed
x94_s4_e0: [OBJ] Disable OBJ key guide (specify instance ID)
x94_s4_e1: [OBJ] Disable OBJ key guide (specify instance ID)
x94_s4_e2: [OBJ] Disable OBJ key guide (specify instance ID)
x94_s5: Key guide all OFF: Closing passage side
x94_s5_e0: [OBJ] Disable OBJ key guide (specify instance ID)
x94_s5_e1: [OBJ] Disable OBJ key guide (specify instance ID)
x94_s5_e2: [OBJ] Disable OBJ key guide (specify instance ID)
x94_s6: When the lobby is open
x94_s7: When the aisle is open
x94_s8: Closed lobby side
x94_s9: Aisle side closed
x95: [Condition] Gimmick door in the middle of the map
x95_p0: Lever instance ID to activate
x95_p1: Center lever instance ID
x95_s0: Start state
x95_s1: Lever operation standby
x95_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x95_s1_e1: [Group condition: OBJ] OBJ state ID comparison
x95_s1_e2: [Group condition: OBJ] OBJ state ID comparison
x95_s1_e3: [Group condition: OBJ] OBJ state ID comparison
x95_s2: End state
x96: [Execution] Gimmick door in the middle of the map
x96_p0: Instance ID of the door to close
x96_p1: Instance ID of door to open
x96_p2: Lobby lever instance ID
x96_p3: Aisle lever instance ID
x96_p4: Center lever instance ID
x96_p5: Point ID to change Navimesh to entry prohibition
x96_p6: Point ID to change Navimesh to allow entry
x96_s0: Start state
x96_s1: Close the door
x96_s1_e0: [OBJ] OBJ state transition request (with instance ID specified)
x96_s2: Time management state (provisional)
x96_s3: Open the door
x96_s3_e0: [OBJ] OBJ state transition request (with instance ID specified)
x96_s4: Has the door closed?
x96_s4_e0: [Group condition: OBJ] OBJ state ID comparison
x96_s5: Key guide switching: All invalid
x96_s5_e0: [OBJ] Disable OBJ key guide (specify instance ID)
x96_s5_e1: [OBJ] Disable OBJ key guide (specify instance ID)
x96_s5_e2: [OBJ] Disable OBJ key guide (specify instance ID)
x96_s6: Navi Mesh Change: No entry on
x96_s6_e0: [Map] Added Navimesh attribute
x96_s7: Navi Mesh Change: No entry prohibited
x96_s7_e0: [Map] Navimesh attribute deletion
x96_s8: End state
x97: [Preset] Map middle gimmick door
x97_p0: The instance ID of the lobby door
x97_p1: Instance ID of the aisle door
x97_p2: The instance ID of the lobby lever
x97_p3: Instance ID of the aisle lever
x97_p4: Center lever instance ID
x97_p5: Point ID for changing the navigation mesh of the lobby door
x97_p6: Point ID for changing the navigation mesh of the door on the aisle side
x97_s0: Start state
x97_s1: [Reproduction] Gimmick door _SubState in the middle of the map
x97_s2: [Condition] Gimmick door in the middle of the map: When the lobby side is open_SubState
x97_s3: [Condition] Gimmick door in the middle of the map: When the aisle side is open_SubState
x97_s4: [Execution] Gimmick door in the middle of the map: _SubState when the lobby is open
x97_s5: [Execute] Gimmick door in the middle of the map: When the aisle side is open_SubState
x97_s6: [Execution] Gimmick door in the middle of the map_Lobby side closing_SubState
x97_s7: [Execution] Gimmick door in the middle of the map_Aisle side closed_SubState
x97_s8: End state
x98: [Condition] Switch enemy display with gimmick door
x98_p0: Hit group on the side that does not erase the enemy
x98_p1: Instance ID of the door to close
x98_s0: Start state
x98_s1: Did the door close while riding the specified hit?
x98_s1_e0: [Group condition: Map] Judgment that the player is on the specified hit group
x98_s1_e1: [Group condition: Map] Judgment that the player is on the specified hit group
x98_s1_e2: [Group condition: System] Group condition is satisfied
x98_s1_e3: [Group condition: OBJ] OBJ state ID comparison
x98_s2: End state
x99: [Execution] Switch the enemy display at the gimmick door
x99_p0: Event group ID to stop
x99_p1: Event group ID to be canceled
x99_s0: Start state
x99_s1: Enemy stop
x99_s1_e0: [Generator] Temporarily stop enemies by specifying a generator group
x99_s2: Enemy stop release
x99_s2_e0: [Generator] Temporarily stop enemies by specifying a generator group
x99_s3: Time adjustment state
x99_s4: End state
x100: [Preset] Switch enemy display with gimmick door
x100_p0: The instance ID of the lobby door
x100_p1: Instance ID of the aisle door
x100_s0: Start state
x100_s1: [Reproduction] Enemy display switching at the gimmick door_SubState
x100_s2: [Condition] Enemy display switching with gimmick door: Lobby side closes_SubState
x100_s3: [Condition] Enemy display switching at gimmick door: Passage side closes_SubState
x100_s4: [Execution] Enemy display switching at gimmick door: Lobby side closes_SubState
x100_s5: [Execution] Enemy switching with gimmick door: Aisle side closes_SubState
x100_s6: Rerun
x101: [Reproduction] Enemy switching with gimmick door
x101_p0: The instance ID of the lobby door
x101_p1: Instance ID of the aisle door
x101_s0: Start state
x101_s1: Judgment of door status
x101_s2: When the lobby is open
x101_s3: When the aisle is open
x102: [Reproduction] Enemy display switching_initialization
x102_s0: Start state
x102_s1: End state
x103: [Condition] Enemy display switching_initialization
x103_p0: Lobby side door OBJ instance ID
x103_p1: Aisle side door OBJ instance ID
x103_s0: Start state
x103_s1: PC position and open door judgment
x103_s1_e0: [Group condition: Map] Judgment that the player is on the specified hit group
x103_s1_e1: [Group condition: Map] Judgment that the player is on the specified hit group
x103_s1_e2: [Group condition: OBJ] OBJ state ID comparison
x103_s1_e3: [Group condition: System] Group condition is satisfied
x103_s1_e4: [Group condition: Map] Judgment that the player is on the specified hit group
x103_s1_e5: [Group condition: Map] Judgment that the player is on the specified hit group
x103_s1_e6: [Group condition: OBJ] OBJ state ID comparison
x103_s1_e7: [Group condition: System] Group condition is satisfied
x103_s2: Lobby side
x103_s3: Ogre passage side
x104: [Execute] Enemy display switching_initialization
x104_p0: Event group ID to stop
x104_p1: Event group ID to be canceled
x104_s0: Start state
x104_s1: Switch enemy display
x104_s1_e0: [Generator] Temporarily stop enemies by specifying a generator group
x104_s1_e1: [Generator] Temporarily stop enemies by specifying a generator group
x104_s2: End state
x105: [Preset] Enemy display switching_initialization
x105_p0: Lobby side door OBJ instance ID
x105_p1: Aisle side door OBJ instance ID
x105_s0: Start state
x105_s1: [Reproduction] Enemy display switching_initialization_SubState
x105_s2: [Condition] Enemy display switching_initialization_SubState
x105_s3: [Execute] Enemy display switching_initialization: passage side display_SubState
x105_s4: [Execution] Enemy display switching_initialization: Lobby side display_SubState
x105_s5: End state
x106: [Execution] Wall destruction auger activation_Navimesh switching only
x106_p0: Navigation switching point ID
x106_s0: Start state
x106_s1: Navi mesh switching
x106_s1_e0: [Map] Navimesh attribute deletion
x106_s2: End state
x107: [Preset] Wall visible on the door
x107_p0: Instance ID of the wall OBJ visible on the door
x107_s0: Start state
x107_s1: [Reproduction] Wall _SubState visible in the door
x107_s2: [Condition] Wall visible through the door_SubState
x107_s3: [Execution] Wall that looks like a door_SubState
x107_s4: End state
x108: [Reproduction] Wall visible on the door
x108_s0: Start state
x108_s1: End state
x109: [Conditions] Wall visible on the door
x109_p0: Instance ID of the wall OBJ visible on the door
x109_s0: Start state
x109_s1: Have you checked the wall?
x109_s1_e0: [Group condition: OBJ] Judgment to examine OBJ
x109_s2: End state
x110: [Execution] Wall visible on the door
x110_p0: Instance ID of the wall OBJ visible on the door
x110_s0: Start state
x110_s1: Show message
x110_s1_e0: [FE] Window display only for YES
x110_s2: End state
x111: [Preset] Enclosed people
x111_p0: Magic barrier OBJ instance ID
x111_p1: Lever OBJ instance ID
x111_p2: Point ID for Navimesh change
x111_s0: Start state
x111_s1: [Reproduction] Enclosed person_SubState
x111_s2: [Condition] Enclosed person_SubState
x111_s3: [Execution] Enclosed Person_SubState
x111_s4: End state
x112: [Reproduction] Enclosed people
x112_p0: Magic barrier OBJ instance ID
x112_p1: Point ID for Navimesh change
x112_s0: Start state
x112_s1: Has the seal already been released?
x112_s2: Navimesh attribute deletion
x112_s2_e0: [Map] Navimesh attribute deletion
x112_s3: Has the magic barrier been initialized?
x112_s4: [Relief] Canceling the magic barrier: 70
x112_s4_e0: [OBJ] OBJ state transition request (with instance ID specified)
x112_s5: Not open
x112_s6: Canceled
x113: [Condition] Enclosed person
x113_p0: Lever OBJ instance ID
x113_s0: Start state
x113_s1: Lever operation standby
x113_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x113_s2: End state
x114: [Execution] Enclosed person
x114_p0: Magic barrier OBJ instance ID
x114_p1: Point ID for Navimesh change
x114_s0: Start state
x114_s1: Break the magic barrier: 70
x114_s1_e0: [OBJ] OBJ state transition request (with instance ID specified)
x114_s2: Navimesh attribute deletion
x114_s2_e0: [Map] Navimesh attribute deletion
x114_s3: Sealed Person: Turns on the seal release flag
x114_s3_e0: [Flag] Set flag
x114_s4: End state
x115: [Preset] Activation conditions for an auger and a reinforced immortal who are at the foot of the aisle
x115_p0: 檻 OBJ instance ID
x115_p1: Point ID for Navimesh change
x115_p2: An activation flag for enemies in the cage
x115_s0: Start state
x115_s1: [Reproduction] Starting condition of the auger and reinforced immortal at the foot of the passage_SubState
x115_s2: [Conditions] Activation conditions for the auger and reinforced immortal at the foot of the aisle_SubState
x115_s3: [Execution] Activation conditions for the auger and reinforced immortal who are at the foot of the passage_SubState
x115_s4: End state
x116: [Reproduction] Starting conditions for an auger and a reinforced immortal man
x116_p0: 檻 OBJ instance ID
x116_s0: Start state
x116_s1: 判定 Judgment of OBJ status
x116_s2: Undestructed
x116_s3: Destroyed
x117: [Conditions] Conditions for starting an auger and a reinforced immortal person at the foot of the passage
x117_p0: 檻 OBJ instance ID
x117_s0: Start state
x117_s1: 檻 Destruction of OBJ destruction
x117_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x117_s2: End state
x118: [Execution] Starting conditions for an auger and a reinforced immortal person at the foot of the passage
x118_p0: Point ID for Navimesh change
x118_p1: An activation flag for enemies in the cage
x118_s0: Start state
x118_s1: Navimesh change processing
x118_s1_e0: [Map] Navimesh attribute deletion
x118_s2: Turn on the activation flag for enemies in the cage
x118_s2_e0: [Flag] Set flag
x118_s3: End state
x119: [Reproduction] Destroy the door when the wall is destroyed
x119_s0: Start state
x119_s1: End state
x120: [Condition] When the wall is destroyed, the door is also destroyed.
x120_p0: Wall OBJ instance ID
x120_s0: Start state
x120_s1: Wall waiting for destruction
x120_s1_e0: [Group condition: OBJ] OBJ destruction status judgment
x120_s2: End state
x121: [Execution] When the wall is destroyed, the door is also destroyed.
x121_p0: Door OBJ instance ID
x121_s0: Start state
x121_s1: Door destruction
x121_s1_e0: [OBJ] Destroy OBJ (specify instance ID)
x121_s2: End state
x122: [Preset] Destroy the door when the wall is destroyed
x122_p0: Wall OBJ instance ID
x122_p1: Door OBJ instance ID
x122_s0: Start state
x122_s1: [Reproduction] Destroy the door when the wall is destroyed_Sky_SubState
x122_s2: [Execution] When the wall is destroyed, the door is also destroyed._SubState
x122_s3: [Condition] The door is destroyed when the wall is destroyed.
x122_s4: End state
x123: [Preset] The enemy behind the painting starts
x123_p0: Instance ID of the painting OBJ
x123_p1: State ID when the painting OBJ is destroyed
x123_p2: Enemy action start flag
x123_s0: Start state
x123_s1: [Reproduction] The enemy behind the painting is activated_SubState
x123_s2: [Condition] The enemy behind the painting is activated_SubState
x123_s3: [Execution] The enemy behind the painting is activated_SubState
x123_s4: End state
x124: [Reproduction] The enemy behind the painting starts
x124_p0: Instance ID of the painting OBJ
x124_p1: State ID when the painting OBJ is destroyed
x124_p2: Enemy action start flag
x124_s0: Start state
x124_s1: State judgment of painting OBJ
x124_s2: Turn on enemy action start flag
x124_s2_e0: [Flag] Set flag
x124_s3: Undestructed
x124_s4: Destroyed
x125: [Condition] The enemy behind the painting starts
x125_p0: Instance ID of the painting OBJ
x125_p1: State ID when the painting OBJ is destroyed
x125_s0: Start state
x125_s1: Has the painting OBJ been destroyed?
x125_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x125_s2: End state
x126: [Execution] The enemy behind the painting starts
x126_p0: Enemy action start flag
x126_s0: Start state
x126_s1: Turn on enemy action start flag
x126_s1_e0: [Flag] Set flag
x126_s2: End state
x127: [Preset] Mirror Night
x127_p0: Judgment area start point ID
x127_p1: End point ID of the judgment area
x127_s0: Start state
x127_s1: [Reproduction] _SubState during Mirror Knight
x127_s2: [Condition] Mirror Knight's _ Area_SubState
x127_s3: [Execution] Mirror Knight's _ Area_SubState
x127_s4: [Conditions] Mirror Night Room_Outside Area_SubState
x127_s5: [Execution] During Mirror Knight_Outside Area_SubState
x127_s6: End state
x128: [Reproduction] Mirror Night
x128_s0: Start state
x128_s1: End state
x129: [Conditions] Mirror Night
x129_p0: Area inside / outside judgment
x129_p1: Judgment area start point ID
x129_p2: End point ID of the judgment area
x129_s0: Start state
x129_s1: Area inside / outside judgment
x129_s1_e0: [Group condition: Character] Judgment within player points
x129_s2: End state
x130: [Execution] Mirror Night
x130_p0: Special drawing to set
x130_s0: Start state
x130_s1: Drawing switching
x130_s1_e0: [Draw] Set special drawing mode
x130_s2: End state
x131: [Preset] Map middle gimmick door_initialization
x131_p0: Gimmick door initialization execution determination flag
x131_p1: The instance ID of the lobby door
x131_p2: Instance ID of the aisle door
x131_p3: Point ID for changing the navigation mesh of the lobby door
x131_p4: Point ID for changing the navigation mesh of the door on the aisle side
x131_s0: Start state
x131_s1: [Reproduction] Gimmick door in the middle of the map_Initialization_SubState
x131_s2: [Condition] Gimmick door in the middle of the map_Initialization_SubState
x131_s3: [Execution] Gimmick door in the middle of the map_Initialization_SubState
x131_s4: End state
x132: [Reproduction] Gimmick door in the middle of the map_initialization
x132_s0: Start state
x132_s1: Exit if guest
x132_s2: Execution conditions
x132_s3: Finish
x133: [Condition] Gimmick door in the middle of the map_Initialization
x133_p0: Gimmick door initialization execution determination flag
x133_s0: Start state
x133_s1: Initialization execution judgment
x133_s1_e0: [Group condition: Flag] Event flag comparison
x133_s2: Initialization execution
x133_s3: Finish
x134: [Execution] Gimmick door in the middle of the map
x134_p0: Gimmick door initialization execution determination flag
x134_p1: The instance ID of the lobby door
x134_p2: Instance ID of the aisle door
x134_p3: Point ID for changing the navigation mesh of the lobby door
x134_p4: Point ID for changing the navigation mesh of the door on the aisle side
x134_s0: Start state
x134_s1: Set both doors to the initial state
x134_s1_e0: [OBJ] OBJ state transition request (with instance ID specified)
x134_s1_e1: [OBJ] OBJ state transition request (with instance ID specified)
x134_s2: Navigation mesh change
x134_s2_e0: [Map] Navimesh attribute deletion
x134_s2_e1: [Map] Added Navimesh attribute
x134_s3: Gimmick door initialization execution determination flag: ON
x134_s3_e0: [Flag] Set flag
x134_s4: Wait for transition of both doors
x134_s4_e0: [Group condition: OBJ] OBJ state ID comparison
x134_s4_e1: [Group condition: OBJ] OBJ state ID comparison
x134_s5: End state
x135: [Preset] Change the navigation mesh of the king's door
x135_p0: King door opening and closing flag
x135_p1: Navimesh change point ID
x135_s0: Start state
x135_s1: [Reproduction] Navi mesh change of the king's door_SubState
x135_s2: [Condition] Change the navigation mesh of the king's door_SubState
x135_s3: [Execution] Navi mesh change of the king's door_Closed_SubState
x135_s4: [Execution] Change Navimesh of King's Door_Open_SubState
x135_s5: Rerun
x135_s6: Finish
x136: [Reproduction] Navi mesh change of the king's door
x136_s0: Start state
x136_s1: Host? Are you a guest?
x136_s2: host
x136_s3: The guests
x137: [Condition] Change the navigation mesh of the king's door
x137_p0: King door opening and closing flag
x137_s0: Start state
x137_s1: Judgment status of king's door open / close flag
x137_s1_e0: [Group condition: Flag] Event flag comparison
x137_s2: The king's door is closed
x137_s3: The king's door is open
x138: [Execution] Navi mesh change of the king's door_closed
x138_p0: King door opening and closing flag
x138_p1: Navimesh change point ID
x138_s0: Start state
x138_s1: Navimesh disabled
x138_s1_e0: [Map] Added Navimesh attribute
x138_s2: Has the king's door opened?
x138_s2_e0: [Group condition: Flag] Event flag comparison
x138_s3: End state
x139: [Execution] Navi mesh change of the king's door_open
x139_p0: King door opening and closing flag
x139_p1: Navimesh change point ID
x139_s0: Start state
x139_s1: Navigation mesh can be passed
x139_s1_e0: [Map] Navimesh attribute deletion
x139_s2: Has the king's door closed?
x139_s2_e0: [Group condition: Flag] Event flag comparison
x139_s3: End state
x140: Character: Petrified: Key guide
x140_p0: generator
x140_p1: Death: Global event flag
x140_p2: Event action
x140_p3: Petrified: Area and other flags
x140_p4: Petrified: Global event flag
x140_p5: Key guide parameters
x140_p6: Petrification start state ID
x140_p7: Petrification appearance event
x140_s0: Start state
x140_s1: Petrochemical: System: End
x140_s1_e0: [System] Termination notification
x140_s2: Petrochemical: Key guide: Display
x140_s2_e0: [FE] Create key guide area
x140_s3: Petrochemical: Key guide: Waiting for input
x140_s3_e0: [Group condition: Character] Judgment to examine character
x140_s3_e1: [Group condition: Map] Judgment that the player is in the map
x140_s4: Petrochemical: System: Re-execution
x140_s4_e0: [System] Re-execution notification
x140_s5: Petrification: Key guide: Deleted
x140_s5_e0: [FE] Delete key guide area
x140_s6: Petrification: Event action: Regeneration
x140_s6_e0: [Character action] Request action from player
x140_s6_e1: [Group condition: Character] Player event action judgment
x140_s7: Petrification: Event action: Standby: Elapsed time
x140_s7_e0: [Group condition: Event] State elapsed time comparison
x140_s8: Petrification: Petrified
x140_s8_e0: [Item] Item consumption
x140_s8_e1: [Flag] Set flag
x140_s8_e2: [Group condition: Flag] Event flag comparison
x140_s8_e3: [Flag] Set flag
x140_s8_e4: [Group condition: Flag] Event flag comparison
x140_s9: Petrochemical: Event action: Wait
x140_s9_e0: [Group condition: Character] Player event action judgment
x140_s10: Petrochemical: Item usage selection dialog
x140_s10_e0: [FE] Display of YES / NO selection window
x140_s11: Petrochemical: Item usage selection dialog: Waiting for input
x140_s12: Petrification: Item not owned dialog
x140_s12_e0: [FE] Window display only for YES
x140_s13: Petrochemical: Item not owned dialog: Waiting for input
x140_s14: Petrochemical: Event action: Start
x140_s14_e0: [Group condition: Character] Player event action start possible decision
x140_s15: Petrochemical: Item consumption
x140_s16: Petrochemical: Start
x140_s16_e0: [Group condition: Character] Start state comparison
x140_s16_e1: [Group condition: Event] Event status judgment
x140_s16_e2: [Group condition: Flag] Event flag comparison
x140_s16_e3: [Group condition: Flag] Event flag comparison
x140_s17: End state
x141: [Execute] Gimmick door in the middle of the map_Closed
x141_p0: Instance ID of the door to close
x141_p1: Instance ID of door to open
x141_p2: Lobby lever instance ID
x141_p3: Aisle lever instance ID
x141_p4: Center lever instance ID
x141_p5: Point ID to change Navimesh to entry prohibition
x141_p6: Point ID to change Navimesh to allow entry
x141_s0: Start state
x141_s1: Time management state (provisional)
x141_s2: Open the door
x141_s2_e0: [OBJ] OBJ state transition request (with instance ID specified)
x141_s3: Has the door closed?
x141_s3_e0: [Group condition: OBJ] OBJ state ID comparison
x141_s4: Navi Mesh Change: No entry on
x141_s4_e0: [Map] Added Navimesh attribute
x141_s5: Navi Mesh Change: No entry prohibited
x141_s5_e0: [Map] Navimesh attribute deletion
x141_s6: End state
x142: [Condition] Enemy activation determination_Enemy Spirit
x142_s0: Start state
x142_s1: Was the startup flag turned ON?
x142_s1_e0: [Group condition: Flag] Event flag comparison
x142_s2: End state
x143: [Execution] Navi change _ enemy spirit
x143_p0: Point ID for Navimesh change
x143_s0: Start state
x143_s1: Navigation mesh change
x143_s1_e0: [Map] Navimesh attribute deletion
x143_s2: End state
x144: [Conditions] Wall destruction auger activation _ enemy spirit
x144_p0: Wall instance ID
x144_s0: Start state
x144_s1: Was the wall broken?
x144_s1_e0: [Group condition: OBJ] OBJ destruction status judgment
x144_s2: End state
x145: [BEST] [Reproduction] Gimmick door in the middle of the map_Relief
x145_s0: Start state
x145_s1: Exit if guest
x145_s2: Execution conditions
x145_s3: Finish
x146: [BEST] [Condition] Gimmick door in the middle of the map_Relief
x146_p0: Lobby door OBJ instance ID
x146_p1: Aisle door OBJ instance ID
x146_s0: Start state
x146_s1: Remedy execution decision: Are both doors closed?
x146_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x146_s1_e1: [Group condition: OBJ] OBJ state ID comparison
x146_s2: Initialization execution
x146_s3: Finish
x147: [BEST] [execution] Gimmick door in the middle of the map _ relief
x147_p0: Gimmick door initialization execution determination flag
x147_s0: Start state
x147_s1: Gimmick door initialization execution determination flag: OFF
x147_s1_e0: [Flag] Set flag
x147_s2: End state
x148: [BEST] [Preset] Gimmick door in the middle of the map_Relief
x148_p0: Lobby door OBJ instance ID
x148_p1: Aisle door OBJ instance ID
x148_p2: Gimmick door initialization execution determination flag
x148_s0: Start state
x148_s1: [BEST] [Reproduction] Gimmick door in the middle of the map_Relief_SubState
x148_s2: [BEST] [Execute] Gimmick door in the middle of the map_Relief_SubState
x148_s3: [BEST] [Condition] Map's middle gimmick door_Relief_SubState
x148_s4: Finish
x149: [DC] [Condition] When the lever is activated, the heel is completely destroyed.
x149_p0: Lever OBJ instance ID
x149_s0: Start state
x149_s1: Lever activation judgment
x149_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x149_s2: End state
x150: [DC] [Execution] Lever is activated to destroy all traps
x150_p0: All destruction flag
x150_s0: Start state
x150_s1: All destruction flag ON
x150_s1_e0: [Flag] Set flag
x150_s2: Ori A destruction judgment
x150_s2_e0: [Group condition: OBJ] OBJ state ID comparison
x150_s3: Destruction of Ori A
x150_s3_e0: [OBJ] Destroy OBJ (specify instance ID)
x150_s4: Ori-B destruction judgment
x150_s4_e0: [Group condition: OBJ] OBJ state ID comparison
x150_s5: Destruction of Ori B
x150_s5_e0: [OBJ] Destroy OBJ (specify instance ID)
x150_s6: Ori-C destruction determination
x150_s6_e0: [Group condition: OBJ] OBJ state ID comparison
x150_s7: Destruction of Ori C
x150_s7_e0: [OBJ] Destroy OBJ (specify instance ID)
x150_s8: Ori-D destruction judgment
x150_s8_e0: [Group condition: OBJ] OBJ state ID comparison
x150_s9: Destruction of Ori D
x150_s9_e0: [OBJ] Destroy OBJ (specify instance ID)
x150_s10: Ori E destruction judgment
x150_s10_e0: [Group condition: OBJ] OBJ state ID comparison
x150_s11: Destruction of Ori E
x150_s11_e0: [OBJ] Destroy OBJ (specify instance ID)
x150_s12: Ori-F destruction judgment
x150_s12_e0: [Group condition: OBJ] OBJ state ID comparison
x150_s13: Destruction of Orient F
x150_s13_e0: [OBJ] Destroy OBJ (specify instance ID)
x150_s14: Ori-G destruction judgment
x150_s14_e0: [Group condition: OBJ] OBJ state ID comparison
x150_s15: Destruction of Ori G
x150_s15_e0: [OBJ] Destroy OBJ (specify instance ID)
x150_s16: Ori-H destruction determination
x150_s16_e0: [Group condition: OBJ] OBJ state ID comparison
x150_s17: Destruction of Ori H
x150_s17_e0: [OBJ] Destroy OBJ (specify instance ID)
x150_s18: End state
x151: [DC] [Reproduction] Lever is completely destroyed by lever activation
x151_s0: Start state
x151_s1: End state
x152: [DC] [Preset] Lever is completely destroyed by lever activation
x152_p0: Lever OBJ instance ID
x152_p1: All destruction flag
x152_s0: Start state
x152_s1: [DC] [Reproduction] Trap is completely destroyed by lever activation_SubState
x152_s2: [DC] [Execution] When the lever is activated, the trap is completely destroyed_SubState
x152_s3: [DC] [Condition] When the lever is activated, the heel is completely destroyed_SubState
x152_s4: End state
x153: [DC] [Condition] Enemy generated by lighthouse lighting
x153_p0: Lighthouse OBJ instance ID
x153_s0: Start state
x153_s1: Lighthouse lighting judgment
x153_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x153_s2: End state
x154: [DC] [execution] Enemies are generated by lighting the lighthouse
x154_p0: Enemy generation flag
x154_s0: Start state
x154_s1: Enemy generation flag ON
x154_s1_e0: [Flag] Set flag
x154_s2: Wait for flag ON
x154_s2_e0: [Group condition: Flag] Event flag comparison
x154_s3: End state
x155: [DC] [Reproduction] Enemy generation by lighthouse lighting
x155_p0: Lighthouse OBJ instance ID
x155_p1: Enemy generation flag
x155_s0: Start state
x155_s1: Is the lighthouse already lit?
x155_s2: Host?
x155_s3: Enemy generation flag ON
x155_s3_e0: [Flag] Set flag
x155_s4: Unlit
x155_s5: Already lit
x155_s6: The guests
x156: [DC] [Preset] Enemy generated by lighthouse lighting
x156_p0: Lighthouse OBJ instance ID
x156_p1: Enemy generation flag
x156_s0: Start state
x156_s1: [DC] [Reproduction] Enemies generated by lighthouse lighting_SubState
x156_s2: [DC] [Execution] Enemies generated by lighthouse lighting_SubState
x156_s3: [DC] [Condition] Enemy generated by lighthouse lighting_SubState
x156_s4: Finish
x157: [DC] [Preset] Lantern lights by destroying enemies linked to the lighthouse
x157_p0: Generator ID
x157_p1: Lantern OBJ instance ID
x157_s0: Start state
x157_s1: [DC] [Reproduction] Lanterns lit by lighthouse-linked enemy destruction_SubState
x157_s2: [DC] [Execution] Lantern lights when the lighthouse-linked enemy is destroyed_SubState
x157_s3: [DC] [Condition] Lantern lights when the lighthouse-linked enemy is destroyed _SubState
x157_s4: End state
x158: [DC] [Reproduction] Lantern lights by destroying the lighthouse-linked enemy
x158_p0: Lantern OBJ instance ID
x158_s0: Start state
x158_s1: Host?
x158_s2: Is the lantern already lit?
x158_s3: Unlit
x158_s4: Already lit
x158_s5: The guests
x159: [DC] [Condition] Lantern lights when lighthouse-linked enemy defeats
x159_p0: Generator ID
x159_s0: Start state
x159_s1: Destroyed enemies that appeared in tandem?
x159_s1_e0: [Group condition: Character] Judgment that a character is dead or not generated by the upper limit
x159_s2: Defeat
x160: [DC] [Execution] Lantern lights by destroying enemies linked to the lighthouse
x160_p0: Lantern OBJ instance ID
x160_s0: Start state
x160_s1: Lantern lighting: 70
x160_s1_e0: [OBJ] OBJ state transition request (with instance ID specified)
x160_s2: End state
x161: [DC] [Condition] All lantern lighting
x161_p0: Lantern ①OBJ instance ID
x161_p1: Lantern ② OBJ instance ID
x161_p2: Lantern ③ OBJ instance ID
x161_p3: Lantern ④ OBJ instance ID
x161_s0: Start state
x161_s1: Did all the lanterns light up?
x161_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x161_s1_e1: [Group condition: OBJ] OBJ state ID comparison
x161_s1_e2: [Group condition: OBJ] OBJ state ID comparison
x161_s1_e3: [Group condition: OBJ] OBJ state ID comparison
x161_s2: End state
x162: [DC] [Execution] All lantern lighting judgment
x162_p0: All lighting flag
x162_s0: Start state
x162_s1: All lighting flag ON
x162_s1_e0: [Flag] Set flag
x162_s2: End state
x163: [DC] [Reproduction] All lantern lighting judgment_empty
x163_s0: Start state
x163_s1: End state
x164: [DC] [Preset] All lantern lighting judgment
x164_p0: Lantern ①OBJ instance ID
x164_p1: Lantern ② OBJ instance ID
x164_p2: Lantern ③ OBJ instance ID
x164_p3: Lantern ④ OBJ instance ID
x164_p4: All lighting flag
x164_s0: Start state
x164_s1: [DC] [Reproduction] All lantern lighting determination_empty_SubState
x164_s2: [DC] [Execution] All lantern lighting judgment_SubState
x164_s3: [DC] [Condition] Judgment of all lantern lighting_SubState
x164_s4: End state
x165: [DC] [Reproduction] Character invincible until lock destruction
x165_s0: Start state
x165_s1: End state
x166: [DC] [Condition] Characters are invincible and cannot be locked until destruction
x166_p0: 檻 Destruction flag
x166_p1: 檻 OBJ instance ID
x166_p2: Special effect ID
x166_p3: Generator ID
x166_s0: Start state
x166_s1: State Invincible and Unlockable: Samurai Destruction Judgment
x166_s1_e0: [Status] Make it invincible only while in the current state
x166_s1_e1: [Status] Activate the special effects of the specified enemy
x166_s1_e2: [Group condition: Flag] Event flag comparison
x166_s1_e3: [Group condition: OBJ] OBJ state ID comparison
x166_s2: End state
x167: [DC] [Execution] Cannot lock with character invincible until destruction
x167_p0: Special effect ID
x167_p1: Generator ID
x167_s0: Start state
x167_s1: Unlock disabled
x167_s1_e0: [Status] Cancel special effects of specified enemy
x167_s2: End state
x168: [DC] [Preset] Character invincible and cannot be locked until destruction
x168_p0: 檻 Destruction flag
x168_p1: 檻 OBJ instance ID
x168_p2: Special effect ID
x168_p3: Generator ID
x168_s0: Start state
x168_s1: [DC] [Reproduction] Character invincible and cannot be locked until 檻 destruction_Sky_SubState
x168_s2: [DC] [Execute] Character invincible and cannot be locked until destruction _SubState
x168_s3: [DC] [Condition] Character invincible and cannot be locked until 檻 destruction_SubState
x168_s4: End state
x0: [Lib] NPC: Grave Placement: General purpose
x0_p0: Death map: Global event flag
x0_p1: Tomb: OBJ instance ID
x0_p2: Tomb move to: Generator ID
x0_p3: NPC information parameter ID
x0_s0: Start state
x0_s1: Grave Placement: Start
x0_s1_e0: [Group condition: Map] Judgment that the player is in the map
x0_s2: Grave placement: branch
x0_s2_e0: [Group condition: Flag] Event flag comparison
x0_s2_e1: [Group condition: other] Grave generation possibility judgment
x0_s3: Grave Placement: Survival
x0_s3_e0: [OBJ] OBJ state transition request
x0_s3_e1: [Group condition: OBJ] OBJ state ID comparison
x0_s4: Grave Placement: Death
x0_s4_e0: [OBJ] OBJ state transition request
x0_s4_e1: [Group condition: OBJ] OBJ state ID comparison
x0_s5: Grave Placement: System: Finish
x0_s5_e0: [System] Termination notification
x0_s6: Grave Placement: Warp Move
x0_s7: End state
x1: [Lib] NPC: Grave: Key Guide: Key Guide
x1_p0: Global: death flag
x1_p1: Grave OBJ instance ID
x1_p2: NPC information parameter ID
x1_s0: Start state
x1_s1: Key guide: Start
x1_s2: Key guide: Key guide display
x1_s2_e0: [FE] Create key guide area
x1_s3: Key Guide: Use Soul dialog
x1_s3_e0: [FE] Display of YES / NO selection window
x1_s4: Key guide: Soul shortage dialog
x1_s4_e0: [FE] Window display only for YES
x1_s5: Key guide: Grave display judgment
x1_s5_e0: [Group condition: OBJ] OBJ state ID comparison
x1_s5_e1: [Group condition: OBJ] OBJ state ID comparison
x1_s6: Key guide: Reset
x1_s6_e0: [FE] Delete key guide area
x1_s6_e1: [System] Re-execution notification
x1_s7: Key Guide: Use Soul dialog: Wait for input
x1_s8: Key guide: Soul shortage dialog: Waiting for input
x1_s9: Key guide: Delete key guide
x1_s9_e0: [FE] Delete key guide area
x1_s10: Key Guide: System: Exit
x1_s10_e0: [System] Termination notification
x1_s11: Key guide: Waiting for input
x1_s11_e0: [Group condition: OBJ] Judgment to examine OBJ
x1_s11_e1: [Group condition: Map] Judgment that the player is in the map
x1_s12: End state
x2: [Lib] NPC: Grave: Key Guide: Appearance of Ghosts
x2_p0: Area other flags: Ghost appearance
x2_p1: Area other flags: Conversation start
x2_p2: NPC information parameter ID
x2_s0: Start state
x2_s1: Ghost appearance: Appearance
x2_s1_e0: [Flag] Set flag
x2_s1_e1: [Group condition: Flag] Event flag comparison
x2_s2: Ghost appearance: Character action waiting
x2_s2_e0: [Group condition: Character] Player event action judgment
x2_s3: Appearance of ghost: End of player action
x2_s3_e0: [Character action] Action end request to the player
x2_s4: Ghost appearance: Conversation start flag
x2_s4_e0: [Flag] Set flag
x2_s4_e1: [Group condition: Flag] Event flag comparison
x2_s5: Appearance of ghost: Player action starts
x2_s5_e0: [Character action] Request action from player
x2_s5_e1: [Group condition: Character] Player event action judgment
x2_s6: Ghost appearance: Seoul consumption
x2_s6_e0: [Others] Soul value addition
x2_s7: Appearance of ghost: Waiting for player action
x2_s7_e0: [Group condition: Event] State elapsed time comparison
x2_s8: Ghost appearance: waiting for completion
x2_s8_e0: [Group condition: Event] State elapsed time comparison
x2_s9: Ghost appearance: Waiting for conversation
x2_s9_e0: [Group condition: Event] State elapsed time comparison
x2_s10: End state
x3: [Lib] NPC: Grave: Key guide: General purpose
x3_p0: Ghost Appearance: Area Other Flag
x3_p1: Conversation start: Area and other flags
x3_p2: Death: Global event flag
x3_p3: Tomb: OBJ instance ID
x3_p4: Grave event ID
x3_p5: NPC information parameter ID
x3_s0: Start state
x3_s1: Key guide: Start
x3_s1_e0: [Group condition: Map] Judgment that the player is in the map
x3_s1_e1: [Group condition: Event] Event status judgment
x3_s1_e2: [Group condition: Flag] Event flag comparison
x3_s1_e3: [Group condition: OBJ] OBJ state ID comparison
x3_s2: Key Guide: System: Exit
x3_s2_e0: [System] Termination notification
x3_s3: Key guide: Start conversation: Set flag
x3_s3_e0: [Flag] Set flag
x3_s3_e1: [Group condition: Flag] Event flag comparison
x3_s4: [Lib] NPC: Grave: Key Guide: Key Guide_SubState
x3_s5: [Lib] NPC: Grave: Key Guide: Ghost Appearance_SubState
x3_s6: End state
x4: [Lib] Item specified door unlocking_2
x4_p0: Text ID when opened
x4_p1: Text ID when not opened
x4_p2: item
x4_p3: Key gimmick flag
x4_s0: Start state
x4_s1: Setting unlocking information
x4_s1_e0: [OBJ] Setting information for unlocking
x4_s2: End state
x5: [Lib] NPC: Death determination: General purpose
x5_p0: Generator ID
x5_p1: Death map: Global event flag
x5_s0: Start state
x5_s1: Death determination: Start
x5_s1_e0: [Group condition: Map] Judgment that the player is in the map
x5_s2: Death determination: Wait
x5_s2_e0: [Group condition: Character] Character death determination
x5_s3: Death determination: branch
x5_s3_e0: [Group condition: Flag] Event flag comparison
x5_s4: Death determination: System: End
x5_s4_e0: [System] Termination notification
x5_s5: Death determination: death flag setting
x5_s5_e0: [Flag] Set flag
x5_s5_e1: [Group condition: Flag] Event flag comparison
x5_s6: End state
x6: [Lib] [Preset] Boss Battle Start
x6_p0: Boss destruction flag
x6_p1: Start point ID
x6_p2: End point ID
x6_p3: Sound ID
x6_p4: Boss Battle ID
x6_p5: Other flags for logic
x6_p6: BGM stop time
x6_s0: Start state
x6_s1: [Reproduction] Boss Battle_Start_SubState
x6_s2: [Reproduction] Boss Battle_Sky_SubState
x6_s3: [Execution] Boss Battle_Start_SubState
x6_s4: [Execution] Boss Battle_End_SubState
x6_s5: [Condition] Boss Battle_Start_SubState
x6_s6: [Condition] Boss Battle_End Judgment_SubState
x6_s7: End state
x7: [Reproduction] Boss Battle_Start
x7_p0: Boss destruction flag
x7_s0: Start state
x7_s1: Are you destroying the boss?
x7_s2: Not destroy the boss
x7_s3: Defeated the boss
x8: [Condition] Boss Battle_Start
x8_p0: Start point ID
x8_p1: End point ID
x8_s0: Start state
x8_s1: Did you enter the boss room point?
x8_s1_e0: [Group condition: Character] Judgment within player points
x8_s1_e1: [Group condition: Net] Host judgment
x8_s1_e2: [Group condition: System] Group condition is satisfied
x8_s1_e3: [Group condition: Character] Judgment within player points
x8_s1_e4: [Group condition: Net] Host judgment
x8_s1_e5: [Group condition: System] Group condition is satisfied
x8_s2: End state
x9: [Execution] Boss Battle_Start
x9_p0: Sound ID
x9_p1: Boss Battle ID
x9_p2: Other flags for logic
x9_s0: Start state
x9_s1: Boss battle start notification
x9_s1_e0: [Others] Boss battle started
x9_s2: Boss battle flag notification for logic
x9_s2_e0: [Flag] Set flag
x9_s3: Boss BGM playback
x9_s3_e0: [Sound] Sound playback with point designation
x9_s4: End state
x10: [Reproduction] Boss Battle_Sky
x10_s0: Start state
x10_s1: End state
x11: [Condition] Boss Battle_End Judgment
x11_p0: Boss Battle ID
x11_s0: Start state
x11_s1: Did you beat the boss?
x11_s1_e0: [Group condition: Event] Boss defeat determination
x11_s2: End state
x12: [Execute] Boss Battle_End
x12_p0: Sound ID
x12_p1: Boss Battle ID
x12_p2: Other flags for logic
x12_p3: BGM stop time
x12_s0: Start state
x12_s1: Logic flag OFF
x12_s1_e0: [Flag] Set flag
x12_s2: Boss battle end notification
x12_s2_e0: [Others] End of boss battle
x12_s3: Boss BGM stop
x12_s3_e0: [Sound] Stop sound at specified point
x12_s4: BGM stop standby
x12_s5: End state
x13: [Lib] [Preset] Elevator
x13_p0: OBJ instance ID of the elevator
x13_p1: On elevator point ID_
x13_p2: Elevator point ID_below
x13_p3: Upper lever OBJ instance ID
x13_p4: Lower lever OBJ instance ID
x13_s0: Start state
x13_s1: [Reproduction] Elevator_SubState
x13_s2: [Condition] Elevator_SubState
x13_s3: [Execution] Elevator_Descent_SubState
x13_s4: [Execution] Elevator_Rise_SubState
x13_s5: [Execution] Elevator_Return switch after descending_SubState
x13_s6: [Execution] Elevator_Return switch after ascending_SubState
x13_s7: End state
x14: [Reproduction] Elevator
x14_s0: Start state
x14_s1: End state
x15: [Condition] Elevator
x15_p0: Elevator OBJ instance ID
x15_p1: On elevator point ID_
x15_p2: Elevator point ID_below
x15_p3: Upper lever OBJ instance ID
x15_p4: Lower lever OBJ instance ID
x15_s0: Start state
x15_s1: Elevator position determination
x15_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x15_s1_e1: [Group condition: OBJ] OBJ state ID comparison
x15_s1_e2: [Group condition: OBJ] OBJ state ID comparison
x15_s1_e3: [Group condition: OBJ] OBJ state ID comparison
x15_s1_e4: [Group condition: OBJ] OBJ state ID comparison
x15_s1_e5: [Group condition: OBJ] OBJ state ID comparison
x15_s2: Point or lever standby
x15_s2_e0: [Group condition: Character] Judgment within player points
x15_s2_e1: [Group condition: OBJ] OBJ state ID comparison
x15_s2_e2: [Group condition: OBJ] OBJ state ID comparison
x15_s3: Point or lever standby_2
x15_s3_e0: [Group condition: Character] Judgment within player points
x15_s3_e1: [Group condition: OBJ] OBJ state ID comparison
x15_s3_e2: [Group condition: OBJ] OBJ state ID comparison
x15_s4: The elevator is below
x15_s5: The elevator is on top
x15_s6: During descent or waiting for descent completion
x15_s7: Ascending or waiting to finish rising
x15_s8: Lift the elevator
x15_s9: Lower the elevator
x15_s10: Return the switch after descending
x15_s11: Return the switch after rising
x16: [Execution] Elevator_Rise
x16_p0: Elevator OBJ instance ID
x16_p1: On point ID_
x16_s0: Start state
x16_s1: Start moving elevator
x16_s1_e0: [OBJ] OBJ state transition request (with instance ID specified)
x16_s2: Did you get off the elevator?
x16_s2_e0: [Group condition: OBJ] OBJ state ID comparison
x16_s2_e1: [Group condition: Character] Judgment within player points
x16_s2_e2: [Group condition: System] Judge whether the player is an actor
x16_s2_e3: [Group condition: System] Judge whether an actor exists
x16_s2_e4: [Group condition: System] Group condition is satisfied
x16_s3: Switch returns
x16_s3_e0: [OBJ] OBJ state transition request (with instance ID specified)
x16_s4: End state
x17: [Execution] Elevator_Descent
x17_p0: Elevator OBJ instance ID
x17_p1: Point ID_below
x17_s0: Start state
x17_s1: Start moving elevator
x17_s1_e0: [OBJ] OBJ state transition request (with instance ID specified)
x17_s2: Did you get off the elevator?
x17_s2_e0: [Group condition: OBJ] OBJ state ID comparison
x17_s2_e1: [Group condition: Character] Judgment within player points
x17_s2_e2: [Group condition: System] Judge whether the player is an actor
x17_s2_e3: [Group condition: System] Judge whether an actor exists
x17_s2_e4: [Group condition: System] Group condition is satisfied
x17_s3: Switch returns
x17_s3_e0: [OBJ] OBJ state transition request (with instance ID specified)
x17_s4: End state
x18: [Lib] [Preset] Elevator lever
x18_p0: OBJ instance ID of the elevator
x18_p1: Lever OBJ instance ID
x18_p2: Elevator state ID on the opposite side of the lever
x18_s0: Start state
x18_s1: [Reproduction] Elevator lever_empty_SubState
x18_s2: [Execution] Elevator lever_Key guide disabled_SubState
x18_s3: [Execution] Elevator lever_Key guide valid_SubState
x18_s4: [Conditions] Elevator lever_Use determination_SubState
x18_s5: Rerun
x19: [Reproduction] Elevator lever _ empty
x19_s0: Start state
x19_s1: End state
x20: [Condition] Elevator lever_use judgment
x20_p0: OBJ instance ID of the elevator
x20_p1: Lever OBJ instance ID
x20_p2: Elevator state ID on the opposite side of the lever
x20_s0: Start state
x20_s1: Elevator position determination
x20_s2: Lever disable
x20_s3: Lever activation
x21: [Execution] Elevator lever_Key guide valid
x21_p0: OBJ instance ID of the elevator
x21_p1: Lever OBJ instance ID
x21_p2: Elevator state ID on the opposite side of the lever
x21_s0: Start state
x21_s1: Enable key guide for lever
x21_s1_e0: [OBJ] Disable OBJ key guide (specify instance ID)
x21_s2: Wait for next decision
x21_s2_e0: [Group condition: OBJ] OBJ state ID comparison
x21_s3: End state
x22: [Execute] Elevator lever_key guide disabled
x22_p0: OBJ instance ID of the elevator
x22_p1: Lever OBJ instance ID
x22_p2: Elevator state ID on the opposite side of the lever
x22_s0: Start state
x22_s1: Disabling the key guide of the lever
x22_s1_e0: [OBJ] Disable OBJ key guide (specify instance ID)
x22_s2: Wait for next decision
x22_s2_e0: [Group condition: OBJ] OBJ state ID comparison
x22_s3: End state
x23: [Lib] [Asynchronous] [Preset] Bug key (wall)
x23_p0: Object instance ID
x23_s0: Start state
x23_s1: [Private] [Asynchronous] [Reproduction] Bug key _SubState
x23_s2: [Private] [Asynchronous] [Condition] Bug key _SubState
x23_s3: [Private] [Asynchronous] [Execution] Use bug key _SubState
x23_s4: [Private] [Asynchronous] [Execution] Insect key unavailable dialog _SubState
x23_s5: [Private] [Asynchronous] [Condition] Guest Bug Key_SubState
x23_s6: [Lib] [Execution] Dummy_SubState
x23_s7: End of reproduction
x23_s8: End of execution
x24: [Private] [Asynchronous] [Reproduction] Bug Key
x24_p0: Object instance ID
x24_s0: Start state
x24_s1: OBJ status judgment
x24_s2: OBJ initialization: 10
x24_s2_e0: [OBJ] OBJ state transition request (with instance ID specified)
x24_s3: Before execution
x24_s4: After execution
x24_s5: Guest termination
x25: [Private] [Asynchronous] [Condition] Host insect key
x25_p0: Object instance ID
x25_p1: Number consumed
x25_p2: Consumption items
x25_s0: Start state
x25_s1: Judgment to examine
x25_s1_e0: [Group condition: OBJ] Judgment to examine OBJ
x25_s2: Available branch
x25_s3: Available end
x25_s4: Unusable termination
x26: [Private] [Asynchronous] [Execution] Use bug key dialog
x26_p0: Object instance ID
x26_p1: Key guide type
x26_p2: Event action
x26_p3: Number consumed
x26_p4: Consumption items
x26_s0: Start state
x26_s1: Dialog display
x26_s1_e0: [FE] YES / NO selection window display (specify object instance ID)
x26_s1_e1: [FE] YES / NO selection window display (specify object instance ID)
x26_s2: Result judgment
x26_s3: Rerun
x26_s3_e0: [System] Re-execution notification
x26_s4: Action request to player
x26_s4_e0: [Character action] OBJ animation control request to player (Instance ID specified version)
x26_s5: OBJ status judgment
x26_s5_e0: [Group condition: Character] Player event action judgment
x26_s5_e1: [Group condition: Item] Comparison of number of possessed items
x26_s5_e2: [Group condition: OBJ] OBJ state ID comparison
x26_s5_e3: [Group condition: OBJ] OBJ state ID comparison
x26_s6: Insect key consumption
x26_s6_e0: [Item] Item consumption
x26_s7: Bug key transition waiting: 30
x26_s7_e0: [OBJ] OBJ state transition request (with instance ID specified)
x26_s8: Bug key: Initial state: 10
x26_s8_e0: [OBJ] OBJ state transition request (with instance ID specified)
x26_s9: End state
x27: [Private] [Asynchronous] [Execution] Unusable key
x27_p0: Object instance ID
x27_p1: Number consumed
x27_p2: Consumption items
x27_s0: Start state
x27_s1: Dialog display
x27_s1_e0: [FE] Display window only for YES (specify object instance ID)
x27_s2: Rerun
x27_s2_e0: [System] Re-execution notification
x27_s3: End state
x28: [Private] [Asynchronous] [Condition] Guest Bug Key
x28_p0: Object instance ID
x28_s0: Start state
x28_s1: OBJ standby
x28_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x28_s2: End state
x29: [Lib] [execution] dummy
x29_s0: Start state
x29_s1: End state
x30: [Lib] Character: Petrochemical: Key guide
x30_p0: generator
x30_p1: Death: Global event flag
x30_p2: Event action
x30_p3: Petrified: Area and other flags
x30_p4: Petrified: Global event flag
x30_p5: Key guide parameters
x30_p6: Petrification start state ID
x30_p7: Petrification appearance event
x30_s0: Start state
x30_s1: Petrochemical: System: End
x30_s1_e0: [System] Termination notification
x30_s2: Petrochemical: Key guide: Display
x30_s2_e0: [FE] Create key guide area
x30_s3: Petrochemical: Key guide: Waiting for input
x30_s3_e0: [Group condition: Character] Judgment to examine character
x30_s3_e1: [Group condition: Map] Judgment that the player is in the map
x30_s4: Petrochemical: System: Re-execution
x30_s4_e0: [System] Re-execution notification
x30_s5: Petrification: Key guide: Deleted
x30_s5_e0: [FE] Delete key guide area
x30_s6: Petrification: Event action: Regeneration
x30_s6_e0: [Character action] Request action from player
x30_s6_e1: [Group condition: Character] Player event action judgment
x30_s7: Petrification: Event action: Standby: Elapsed time
x30_s7_e0: [Group condition: Event] State elapsed time comparison
x30_s8: Petrification: Petrified
x30_s8_e0: [Item] Item consumption
x30_s8_e1: [Flag] Set flag
x30_s8_e2: [Group condition: Flag] Event flag comparison
x30_s8_e3: [Flag] Set flag
x30_s8_e4: [Group condition: Flag] Event flag comparison
x30_s9: Petrochemical: Event action: Wait
x30_s9_e0: [Group condition: Character] Player event action judgment
x30_s10: Petrochemical: Item usage selection dialog
x30_s10_e0: [FE] Display of YES / NO selection window
x30_s11: Petrochemical: Item usage selection dialog: Waiting for input
x30_s12: Petrification: Item not owned dialog
x30_s12_e0: [FE] Window display only for YES
x30_s13: Petrochemical: Item not owned dialog: Waiting for input
x30_s14: Petrochemical: Event action: Start
x30_s14_e0: [Group condition: Character] Player event action start possible decision
x30_s15: Petrochemical: Item consumption
x30_s16: Petrochemical: Start
x30_s16_e0: [Group condition: Character] Start state comparison
x30_s16_e1: [Group condition: Event] Event status judgment
x30_s16_e2: [Group condition: Flag] Event flag comparison
x30_s16_e3: [Group condition: Flag] Event flag comparison
x30_s17: End state
x31: [Lib] [Preset] Switch Navimesh according to OBJ status
x31_p0: Object instance ID
x31_p1: OBJ state ID
x31_p2: Navimesh switching point ID
x31_p3: Additional attributes
x31_p4: Delete attribute
x31_s0: Start state
x31_s1: [Lib] [Reproduction] Navi mesh switching according to OBJ state_SubState
x31_s2: [Lib] [Execution] Navigation mesh switching according to OBJ state_SubState
x31_s3: [Lib] [Conditions] Switching the navigation mesh according to the OBJ state_SubState
x31_s4: End state
x32: [Lib] [Reproduction] Navi mesh switching according to OBJ status
x32_p0: Target OBJ instance ID
x32_p1: Target OBJ state ID
x32_p2: Navimesh switching point ID
x32_p3: Additional attributes
x32_p4: Delete attribute
x32_s0: Start state
x32_s1: OBJ status judgment
x32_s2: Navimesh attribute change
x32_s2_e0: [Map] Added Navimesh attribute
x32_s2_e1: [Map] Navimesh attribute deletion
x32_s3: Already started
x32_s4: Not running
x33: [Lib] [Condition] Switch to Navimesh according to OBJ status
x33_p0: Target OBJ instance ID
x33_p1: Target OBJ state ID
x33_p2: Navimesh switching point ID
x33_s0: Start state
x33_s1: OBJ transition wait
x33_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x33_s2: End state
x34: [Lib] [Execution] Switch Navimesh according to OBJ status
x34_p0: Target OBJ instance ID
x34_p1: Target OBJ state ID
x34_p2: Navimesh switching point ID
x34_p3: Additional attributes
x34_p4: Delete attribute
x34_s0: Start state
x34_s1: Navimesh attribute change
x34_s1_e0: [Map] Added Navimesh attribute
x34_s1_e1: [Map] Navimesh attribute deletion
x34_s2: End state
x35: [Lib] [Reproduction] Elevator_Connection replacement
x35_s0: Start state
x35_s1: End state
x36: [Lib] [Condition] Elevator_Connection replacement
x36_p0: Replacement point
x36_p1: OBJ instance ID of the elevator
x36_p2: Top_Hit group ID
x36_p3: Bottom_Hit group ID
x36_s0: Start state
x36_s1: Waiting for intrusion or hitting or hitting a replacement point
x36_s1_e0: [Group condition: Character] Judgment within player points
x36_s1_e1: [Group condition: OBJ] OBJ state ID comparison
x36_s1_e2: [Group condition: Character] Judgment within player points
x36_s1_e3: [Group condition: OBJ] OBJ state ID comparison
x36_s1_e4: [Group condition: Map] Judgment that the player is on the specified hit group
x36_s1_e5: [Group condition: Map] Judgment that the player is on the specified hit group
x36_s2: Ascent point intrusion
x36_s3: Point entry while descending
x36_s4: Be on top
x36_s5: Be down
x37: [Lib] [Execution] Elevator_Connection reading rise_Point
x37_p0: Replacement point
x37_p1: Global flag for connection
x37_p2: ON / OFF of global flag
x37_p3: Top_Hit group ID
x37_p4: OBJ instance ID of the elevator
x37_s0: Start state
x37_s1: Connect event global event flag
x37_s1_e0: [Flag] Set flag
x37_s2: Did you get out of the point?
x37_s2_e0: [Group condition: Character] Judgment within player points
x37_s3: Wait for next decision
x37_s3_e0: [Group condition: Map] Judgment that the player is on the specified hit group
x37_s3_e1: [Group condition: Character] Judgment within player points
x37_s3_e2: [Group condition: OBJ] OBJ state ID comparison
x37_s3_e3: [Group condition: System] Group condition is satisfied
x37_s4: End state
x38: [Lib] [Execution] Elevator_Upon connection replacement_Hit
x38_p0: Global flag for connection
x38_p1: ON / OFF of global flag
x38_p2: Hit group ID
x38_p3: Replacement point ID
x38_p4: OBJ instance ID of the elevator
x38_s0: Start state
x38_s1: Connect event global event flag
x38_s1_e0: [Flag] Set flag
x38_s2: Wait for next decision
x38_s2_e0: [Group condition: Map] Judgment that the player is on the specified hit group
x38_s2_e1: [Group condition: Character] Judgment within player points
x38_s2_e2: [Group condition: OBJ] OBJ state ID comparison
x38_s2_e3: [Group condition: System] Group condition is satisfied
x38_s3: End state
x39: [Lib] [Preset] Elevator_Connection replacement
x39_p0: Replacement point
x39_p1: OBJ instance ID of the elevator
x39_p2: Global flag for connection
x39_p3: Top_Hit group ID
x39_p4: Bottom_Hit group ID
x39_p5: Up_Global flag when rising
x39_p6: Global flag transition when down
x39_s0: Start state
x39_s1: [Lib] [Reproduction] Elevator_Read Connection_SubState
x39_s2: [Lib] [Condition] Elevator_Connection replacement_SubState
x39_s3: [Lib] [Execution] Elevator_Under Connection_Read_Hit_SubState
x39_s4: [Lib] [Execution] Elevator_Connection replacement descent_Point_SubState
x39_s5: [Lib] [Execution] Elevator_Upon Connection Reading_Hit_SubState
x39_s6: [Lib] [Execution] Elevator_Connection reading rise_Point_SubState
x39_s7: End state
x40: [Lib] [Execution] Elevator_Replaced connection_Hit
x40_p0: Global flag for connection
x40_p1: ON / OFF of global flag
x40_p2: Hit group ID
x40_p3: Replacement point ID
x40_p4: OBJ instance ID of the elevator
x40_s0: Start state
x40_s1: Connect event global event flag
x40_s1_e0: [Flag] Set flag
x40_s2: Wait for next decision
x40_s2_e0: [Group condition: Map] Judgment that the player is on the specified hit group
x40_s2_e1: [Group condition: Character] Judgment within player points
x40_s2_e2: [Group condition: OBJ] OBJ state ID comparison
x40_s2_e3: [Group condition: System] Group condition is satisfied
x40_s3: End state
x41: [Lib] [Execution] Elevator_Deletion of connection replacement_Point
x41_p0: Replacement point
x41_p1: Global flag for connection
x41_p2: ON / OFF of global flag
x41_p3: Bottom_Hit group ID
x41_p4: OBJ instance ID of the elevator
x41_s0: Start state
x41_s1: Connect event global event flag
x41_s1_e0: [Flag] Set flag
x41_s2: Did you get out of the point?
x41_s2_e0: [Group condition: Character] Judgment within player points
x41_s3: Wait for next decision
x41_s3_e0: [Group condition: Map] Judgment that the player is on the specified hit group
x41_s3_e1: [Group condition: Character] Judgment within player points
x41_s3_e2: [Group condition: OBJ] OBJ state ID comparison
x41_s3_e3: [Group condition: System] Group condition is satisfied
x41_s4: End state
x42: [Execution] Elevator_Return switch after lift
x42_p0: Elevator OBJ instance ID
x42_p1: On point ID_
x42_s0: Start state
x42_s1: Did you get off the elevator?
x42_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x42_s1_e1: [Group condition: Character] Judgment within player points
x42_s1_e2: [Group condition: System] Judge whether the player is an actor
x42_s1_e3: [Group condition: System] Judge whether an actor exists
x42_s1_e4: [Group condition: System] Group condition is satisfied
x42_s2: Switch returns
x42_s2_e0: [OBJ] OBJ state transition request (with instance ID specified)
x42_s3: End state
x43: [Execution] Elevator_Return switch after descending
x43_p0: Elevator OBJ instance ID
x43_p1: Point ID_below
x43_s0: Start state
x43_s1: Did you get off the elevator?
x43_s1_e0: [Group condition: OBJ] OBJ state ID comparison
x43_s1_e1: [Group condition: Character] Judgment within player points
x43_s1_e2: [Group condition: System] Judge whether the player is an actor
x43_s1_e3: [Group condition: System] Judge whether an actor exists
x43_s1_e4: [Group condition: System] Group condition is satisfied
x43_s2: Switch returns
x43_s2_e0: [OBJ] OBJ state transition request (with instance ID specified)
x43_s3: End state
x44: [Lib] Character: Petrified: Appearance setting
x44_p0: Generator ID
x44_p1: Death: Global event flag
x44_p2: Petrified: Area and other flags
x44_p3: Petrified: Global event flag
x44_p4: Startup state
x44_p5: Key guide: Event ID
x44_s0: Start state
x44_s1: Petrification appearance setting: Start
x44_s1_e0: [Group condition: Map] Judgment that the player is in the map
x44_s2: Petrification appearance setting: System: End
x44_s2_e0: [System] Termination notification
x44_s3: Petrification appearance setting: Death determination: Generator
x44_s3_e0: [Group condition: Character] Character death determination
x44_s4: Petrification appearance setting: Death determination: Global event flag
x44_s4_e0: [Group condition: Flag] Event flag comparison
x44_s5: Petrification: Judgment cancellation decision
x44_s5_e0: [Group condition: Flag] Event flag comparison
x44_s5_e1: [Group condition: Flag] Event flag comparison
x44_s6: Petrified Appearance Setting: Switching startup state
x44_s6_e0: [Generator] Start state override
x44_s7: Petrification appearance: Petrified state appearance
x44_s8: End state
x45: [Lib] NPC White Phantom Appearance: Unconditional
x45_p0: Generator ID
x45_s0: Start state
x45_s1: Appearance: Start
x45_s1_e0: [Group condition: Map] Judgment that the player is in the map
x45_s2: Appearance: Phantom appearance permission
x45_s2_e0: [Generator] NPC spirit body generation
x45_s3: Appearance: System: End
x45_s3_e0: [System] Termination notification
x45_s4: End state
x46: [Lib] [Reproduction] Rebirth fire _ sky
x46_s0: Start state
x46_s1: End state
x47: [Lib] [execute] Rebirth fire
x47_p0: Flag start ID
x47_p1: Flag end ID
x47_s0: Start state
x47_s1: Flag reset
x47_s1_e0: [Flag] Set the flags within the specified range set in the parameter.
x47_s2: End state
x48: [Lib] [Condition] Rebirth fire_sky
x48_s0: Start state
x48_s1: End state
x49: [Lib] [Preset] Rebirth
x49_p0: Flag start ID
x49_p1: Flag end ID
x49_s0: Start state
x49_s1: [Lib] [Reproduction] Reproduction of fire_sky_SubState
x49_s2: [Lib] [Execution] Regenerative fire _SubState
x49_s3: [Lib] [Condition] Reproduction fire_Sky_SubState
x49_s4: End state
x50: [Lib] [Reproduction] Switch Navimesh with flag judgment
x50_p0: Other flags
x50_p1: Global flag
x50_p2: Additional attributes
x50_p3: Delete attribute
x50_p4: Navimesh switching point ID
x50_s0: Start state
x50_s1: Flag judgment
x50_s2: Navimesh attribute change
x50_s2_e0: [Map] Added Navimesh attribute
x50_s2_e1: [Map] Navimesh attribute deletion
x50_s3: Flag OFF
x50_s4: Already flag on
x51: [Lib] [Condition] Switch to Navimesh by flag judgment
x51_p0: Other flags
x51_p1: Global flag
x51_s0: Start state
x51_s1: Flag waiting
x51_s1_e0: [Group condition: Flag] Event flag comparison
x51_s1_e1: [Group condition: Flag] Event flag comparison
x51_s2: Flag ON
x52: [Lib] [execution] Navi mesh switching by flag judgment
x52_p0: Navimesh switching point ID
x52_p1: Additional attributes
x52_p2: Delete attribute
x52_s0: Start state
x52_s1: Navimesh attribute change
x52_s1_e0: [Map] Added Navimesh attribute
x52_s1_e1: [Map] Navimesh attribute deletion
x52_s2: End state
x53: [Lib] [Preset] Navimesh switching by flag judgment
x53_p0: Navimesh switching point ID
x53_p1: Additional attributes
x53_p2: Delete attribute
x53_p3: Other flags
x53_p4: Global flag
x53_s0: Start state
x53_s1: [Lib] [Reproduction] Navimesh switching with flag judgment_SubState
x53_s2: [Lib] [execution] Navimesh switching with flag judgment_SubState
x53_s3: [Lib] [Condition] Navigation mesh switching by flag judgment_SubState
x53_s4: End state
x54: [Lib] NPC Black Phantom Appearance: Online
x54_p0: Summoning conditions: Global event flag
x54_p1: Summon range
x54_p2: Generator ID
x54_p3: Death: Global event flag
x54_p4: Appearance: Minimum time
x54_p5: Appearance: Maximum time
x54_s0: Start state
x54_s1: Black Phantom Appearance: Start
x54_s1_e0: [Group condition: Map] Judgment that the player is in the map
x54_s2: Black Phantom Appearance: Summoning Conditions: Standby
x54_s2_e0: [Group condition: Flag] Event flag comparison
x54_s2_e1: [Group condition: Flag] Event flag comparison
x54_s2_e2: [Group condition: Character] Judgment within player points
x54_s3: Black Phantom Appearance: Timer: Start
x54_s3_e0: [Group condition: Flag] Event flag comparison
x54_s3_e1: [Group condition: Event] State elapsed time comparison
x54_s3_e2: [Group condition: Character] Judgment within player points
x54_s4: Black Phantom Appearance: System: End
x54_s4_e0: [System] Termination notification
x54_s5: Black phantom appearance: Black phantom generation
x54_s5_e0: [Generator] NPC spirit body generation
x54_s5_e1: [Group condition: Net] NPC spirit body generation judgment
x54_s6: Black Phantom Appearance: System: Re-execution
x54_s6_e0: [System] Re-execution notification
x54_s7: [DC] Is it in game?
x54_s8: End state
x55: [Lib] NPC Black Phantom Appearance: Online: Unconditional
x55_p0: Summon range
x55_p1: Generator ID
x55_p2: Appearance: Minimum time
x55_p3: Appearance: Maximum time
x55_s0: Start state
x55_s1: Black Phantom Appearance: Start
x55_s1_e0: [Group condition: Map] Judgment that the player is in the map
x55_s2: Black Phantom Appearance: Summoning Conditions: Standby
x55_s2_e0: [Group condition: Character] Judgment within player points
x55_s3: Black Phantom Appearance: Timer: Start
x55_s3_e0: [Group condition: Event] State elapsed time comparison
x55_s3_e1: [Group condition: Character] Judgment within player points
x55_s4: Black Phantom Appearance: System: End
x55_s4_e0: [System] Termination notification
x55_s5: Black phantom appearance: Black phantom generation
x55_s5_e0: [Generator] NPC spirit body generation
x55_s6: Black Phantom Appearance: System: Re-execution
x55_s6_e0: [System] Re-execution notification
x55_s7: [DC] Is it in game?
x55_s8: End state
x56: [Lib] [Preset] Get trophy
x56_p0: Acquisition trigger_other flags
x56_p1: Trophy type
x56_s0: Start state
x56_s1: Have you acquired a trophy?
x56_s2: Wait for specified flag
x56_s2_e0: [Group condition: Flag] Event flag comparison
x56_s3: Trophy acquisition
x56_s3_e0: [Others] Trophy cancellation
x56_s4: End state
x57: [Lib] [Reproduction] Switch the connection flag at the point
x57_s0: Start state
x57_s1: Host?
x57_s2: host
x57_s3: The guests
x58: [Lib] [Condition] Switch the connection flag at the point
x58_p0: Start point ID
x58_p1: End point ID
x58_s0: Start state
x58_s1: Are you in point?
x58_s1_e0: [Group condition: Character] Judgment within player points
x58_s2: End state
x59: [Lib] [Execution] Switch to the connection flag at the point
x59_p0: Global event flag for connection
x59_p1: Flag switching
x59_p2: Wait for next judgment
x59_s0: Start state
x59_s1: Switch global event flag for connection
x59_s1_e0: [Flag] Set flag
x59_s2: Wait for flag transition
x59_s2_e0: [Group condition: Flag] Event flag comparison
x59_s3: For next judgment: Has the flag changed?
x59_s3_e0: [Group condition: Flag] Event flag comparison
x59_s4: End state
x60: [Lib] [Preset] Switch the connection flag at the point
x60_p0: Start point ID
x60_p1: End point ID
x60_p2: Global event flag for connection
x60_p3: Flag switching
x60_p4: Wait for next judgment
x60_s0: Start state
x60_s1: [Lib] [Reproduction] Switch the connection flag at the point _SubState
x60_s2: [Lib] [Execution] Switch to the connection flag at the point _SubState
x60_s3: [Lib] [Condition] Switch connection flag at point _SubState
x60_s4: Rerun
x60_s5: Guest: Exit
x61: [Lib] [DC] [Execute] Transparent characters
x61_p0: Generator ID
x61_p1: Parameter ID
x61_s0: Start state
x61_s1: Cancel special effects
x61_s1_e0: [Status] Cancel special effects of specified enemy
x61_s2: End state
x62: [Lib] [DC] [Reproduction] Transparent characters
x62_p0: Generator ID
x62_p1: Parameter ID
x62_s0: Start state
x62_s1: Special effects: draw only shadows
x62_s1_e0: [Status] Activate the special effects of the specified enemy
x62_s2: End state
x63: [Lib] [DC] [Condition] Transparent characters
x63_p0: Generator ID
x63_s0: Start state
x63_s1: Defeat determination
x63_s1_e0: [Group condition: Character] Character death determination
x63_s2: End state
x64: [Lib] [DC] [Preset] Transparent characters
x64_p0: Generator ID
x64_p1: Parameter ID
x64_s0: Start state
x64_s1: [Lib] [DC] [Reproduction] Transparent character _SubState
x64_s2: [Lib] [DC] [Execution] Transparent character _SubState
x64_s3: [Lib] [DC] [Condition] Transparent character _SubState
x64_s4: End state
x65: [Lib] [DC] [Reproduction] NPC White Spirit_Gesture Management
x65_p0: Defeat flag
x65_s0: Start state
x65_s1: Has the boss been destroyed?
x65_s2: Not defeated
x65_s3: Defeated
x66: [Lib] [DC] [Condition] NPC White Spirit_Gesture Management
x66_p0: Boss generator ID
x66_s0: Start state
x66_s1: Has the boss's HP dropped below 0?
x66_s1_e0: [Group condition: Character] HP value comparison
x66_s2: End state
x67: [Lib] [DC] [execution] NPC white spirit _ gesture management
x67_p0: Gesture flag
x67_s0: Start state
x67_s1: Gesture flag ON
x67_s1_e0: [Flag] Set flag
x67_s2: End state
x68: [Lib] [DC] [Preset] NPC White Spirit_Gesture Management
x68_p0: Boss destruction flag
x68_p1: Boss generator ID
x68_p2: Gesture flag
x68_s0: Start state
x68_s1: [Lib] [DC] [Reproduction] NPC White Spirit_Gesture Management_SubState
x68_s2: [Lib] [DC] [Execution] NPC White Spirit_Gesture Management_SubState
x68_s3: [Lib] [DC] [Condition] NPC White Spirit_Gesture Management_SubState
x68_s4: End state
