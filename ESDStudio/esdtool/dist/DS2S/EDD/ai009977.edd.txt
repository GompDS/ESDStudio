10: Upper logic
10_s0: Start state
10_s1: Top: Start
10_s1_w0: [Search enemy] Character _ target setting
10_s2: Higher rank: Search enemy ON
10_s2_e0: [Operation] Lock on
10_s3: Top rank: Search off
10_s3_e0: [Operation] Lock off
10_s4: Higher rank: search enemy ON: with target
10_s5: Top: Search OFF: Target OFF
10_s6: Top: death
10_s6_e0: [Operation] death request
10_s7: Upper: Start lower logic
10_s7_e0: [Movement] Movement prediction accuracy setting
500: Lower logic: waiting action test
500_s0: Start state
500_s1: Substate: Start
500_s2: Lower state: Initial setting
500_s3: Lower-level state: branch
500_s4: Lower state: Evacuation standby
500_s5: Evacuation behavior_SubState
500_s6: Passing action_SubState
600: Lower logic: Item use check
600_s0: Start state
600_s1: Substate: Start
600_s2: Lower state: Initial setting
600_s3: Lower-level state: branch
600_s4: Lower-level state: waiting for use of items
700: Lower logic: step check
700_s0: Start state
700_s1: Lower logic: start
700_s2: Lower logic: Initial setting
700_s3: Lower logic: branch
700_s4: Lower logic: step
700_s4_w0: [Attack] Random avoidance
700_s5: Lower logic: rolling
700_s5_w0: [Attack] Random avoidance
700_s6: Lower logic: Avoidance wait
2: [Test] Kingdom Soldier (Dead) Two-Handed Sword
2_s0: Start state
2_s1: Start action
2_s2: Moving (moving)
2_s2_w0: [Move] Horizontal move_Lock_Navimesh
2_s2_w1: [Move] Lock move Navi mesh
2_s2_w2: [Move] Dash_Lock_Navimesh
2_s3: Navimesh search
2_s3_e0: [Search] Navimesh
2_s4: Navimesh search (success)
2_s5: Navimesh search (failure)
2_s5_w0: [Move] Lock to target correction position
2_s6: Start moving
2_s7: Begin attack
2_s7_w0: [Move] Horizontal move_Lock_Random
2_s7_w1: [Move] Lock horizontally to the target correction position
2_s7_w2: [Turning] Turning in place_Lock
2_s8: Attack (melee attack)
2_s8_w0: [Move] Horizontal move_Lock_Random
2_s9: Action 11 (Combo 1)
2_s9_w0: [Attack] Melee attack
2_s10: Under attack
2_s10_e0: [Attack] Attack cancel
2_s11: End of attack
2_s11_e0: [Attack] Damage information reset
2_s12: Action 12 (Combo 2 Blade Dash)
2_s12_w0: [Attack] Melee attack
2_s13: Action 15 (rush)
2_s13_w0: [Attack] Melee attack
2_s14: Action 14 (back attack)
2_s14_w0: [Attack] Melee attack
2_s15: Action 13 (Counter Aim)
2_s15_w0: [Attack] Melee attack
2_s15_w1: [Attack] Melee attack
2_s16: Action 11 Counterattack (Combo 1)
2_s16_w0: [Attack] Melee attack
800: Substate: Subtest
800_s0: Start state
800_s1: Substate: Start
800_s2: Lower state: Initial setting
800_s2_e0: [Attack] Damage lower logic reset setting
800_s2_e1: [General purpose] Sharing flag setting
800_s3: Lower-level state: branch wait
800_s4: [LIB] Lower-level action: branch_SubState
800_s5: [LIB] Lower-level action: Stop action_SubState
800_s6: [LIB] Target existence: invisible (random walking) _SubState
800_s7: [LIB] Targetless action (random walking) _SubState
800_s8: [LIB] Generator action (sub) _SubState
800_s9: [LIB] Damage action: General purpose _SubState
800_s10: Target action: TEST_SubState
800_s11: OBJ destructive action_SubState
800_s12: OBJ avoid move_SubState
x23: Evacuation behavior
x23_s0: Start state
x23_s1: Evacuation behavior: start
x23_s1_e0: [Timer] Start timer
x23_s2: Evacuation behavior: branch
x23_s2_e0: [Random number] Random number generation
x23_s2_e1: [Random number] Random number generation
x23_s3: Evacuation behavior: Before passing: Low speed
x23_s3_w0: [Move] Normal move random
x23_s4: Evacuation behavior: Before passing: High speed
x23_s4_w0: [Move] Dash_random
x23_s5: Evacuation behavior: After passing: High speed
x23_s5_w0: [Move] Dash_random
x23_s6: Evacuation behavior: After passing: Low speed
x23_s6_w0: [Move] Normal move random
x23_s7: Evacuation behavior: After passing: High speed: Turn left
x23_s7_w0: [Move] Lock move random
x23_s8: Evacuation behavior: After passing: High speed: Turn right
x23_s8_w0: [Move] Lock move random
x23_s9: Evacuation behavior: After passing: Low speed: Turn left
x23_s9_w0: [Move] Lock move random
x23_s10: Evacuation behavior: After passing: Low speed: Turn right
x23_s10_w0: [Move] Lock move random
x23_s11: End state
x24: Passing action
x24_s0: Start state
x24_s1: Passing action: start
x24_s1_e0: [Timer] Start timer
x24_s2: Passing action: branch
x24_s3: Passing action: Advance before passing
x24_s3_w0: [Move] Dash_random
x24_s4: Passing action: High-speed left turn
x24_s4_w0: [Move] Lock move random
x24_s5: Passing action: High-speed right turn
x24_s5_w0: [Move] Lock move random
x24_s6: Passing action: Forward after passing
x24_s6_w0: [Move] Dash_random
x24_s7: End state
x25: Target action: TEST
x25_s0: Start state
x25_s1: Target action: start
x25_s2: Target action: branch
x25_s2_e0: [Random number] Random number generation
x25_s3: Target action: Branch after attack
x25_s4: Attack action: TEST_SubState
x25_s5: [LIB] Long distance action_SubState
x25_s6: [LIB] Short distance action_SubState
x25_s7: [LIB] Offset action_SubState
x25_s8: [LIB] Timed action_SubState
x25_s9: [] Offset position action_SubState
x25_s10: End state
x26: Attack action: TEST
x26_s0: Start state
x26_s1: Attack action: start
x26_s1_e0: [Random number] Random number generation
x26_s2: Attack action: End
x26_s2_e0: [General] Logic group flag setting
x26_s3: Attack action: branch
x26_s4: [LIB] Attack: H: step_wait_da: bite_SubState
x26_s5: [LIB] Attack: H: Step_Waiting_Da: Unarming_SubState
x26_s6: End state
x27: [] Offset position action: dash
x27_s0: Start state
x27_s1: Position Action: Start
x27_s2: Position action: branch
x27_s2_e0: [Random number] Random number generation
x27_s3: Position action: Corrected position reaching action
x27_s3_w0: [Move] Horizontal move_Lock_Random
x27_s4: Offset position action: whole back_SubState
x27_s5: Offset position action: right rear whole_SubState
x27_s6: Offset position action: Right front whole_SubState
x27_s7: Offset position action: Right whole_SubState
x27_s8: Offset position action: Left rear whole_SubState
x27_s9: Offset position action: Left front whole_SubState
x27_s10: Offset position action: Left whole_SubState
x27_s11: Offset position action: Forward whole_SubState
x27_s12: End state
x28: Offset position action: whole rear: dash _
x28_s0: Start state
x28_s1: Position action: backward: branch
x28_s1_e0: [Random number] Random number generation
x28_s2: Offset position action: backward (close distance) _SubState
x28_s3: Offset position action: backward (medium distance) _SubState
x28_s4: Offset position action: backward (far distance) _SubState
x28_s5: End state
x29: Offset position action: backward: dash _
x29_p0: Target distance
x29_s0: Start state
x29_s1: Position action: Backward: Move
x29_s1_w0: [Move] Dash move to the target world correction position
x29_s2: Position action: backward: waiting for switching
x29_s3: End state
x30: Offset position action: right rear whole: dash _
x30_s0: Start state
x30_s1: Position action: right rear: branch
x30_s1_e0: [Random number] Random number generation
x30_s2: Offset position action: right rear (short distance) _SubState
x30_s3: Offset position action: right rear (middle distance) _SubState
x30_s4: Offset position action: right rear (rear distance) _SubState
x30_s5: End state
x31: Offset position action: right rear: dash _
x31_p0: Target distance
x31_s0: Start state
x31_s1: Position action: right rear: move
x31_s1_w0: [Move] Dash move to the target world correction position
x31_s2: Position action: right rear: waiting for switching
x31_s3: End state
x32: Offset position action: right front whole: dash _
x32_s0: Start state
x32_s1: Position action: right front: branch
x32_s1_e0: [Random number] Random number generation
x32_s2: Offset position action: Right front (short distance) _SubState
x32_s3: Offset position action: Right forward (medium distance) _SubState
x32_s4: Offset position action: right front (far distance) _SubState
x32_s5: End state
x33: Offset position action: right forward: dash _
x33_p0: Target distance
x33_s0: Start state
x33_s1: Position action: Right forward: Move
x33_s1_w0: [Move] Dash move to the target world correction position
x33_s2: Position action: Right front: Waiting for switching
x33_s3: End state
x34: Offset position action: Right overall: Dash_
x34_s0: Start state
x34_s1: Position action: Right: branch
x34_s1_e0: [Random number] Random number generation
x34_s2: Offset position action: Right (short distance) _SubState
x34_s3: Offset position action: Right (medium distance) _SubState
x34_s4: Offset position action: Right (far distance) _SubState
x34_s5: End state
x35: Offset position action: Right: Dash_
x35_p0: Target distance
x35_s0: Start state
x35_s1: Position action: Right: Move
x35_s1_w0: [Move] Dash move to the target world correction position
x35_s2: Position action: Right: Switching waiting
x35_s3: End state
x36: Offset position action: whole left rear: dash _
x36_s0: Start state
x36_s1: Position action: Left rear: branch
x36_s1_e0: [Random number] Random number generation
x36_s2: Offset position action: Left rear (short distance) _SubState
x36_s3: Offset position action: left rear (middle distance) _SubState
x36_s4: Offset position action: Left rear (far distance) _SubState
x36_s5: End state
x37: Offset position action: left rear: dash _
x37_p0: Target distance
x37_s0: Start state
x37_s1: Position action: Left rear: Move
x37_s1_w0: [Move] Dash move to the target world correction position
x37_s2: Positioning action: Left rear: Waiting for switching
x37_s3: End state
x38: Offset position action: whole left front: dash _
x38_s0: Start state
x38_s1: Position action: Front left: Branch
x38_s1_e0: [Random number] Random number generation
x38_s2: Offset position action: Left front (short distance) _SubState
x38_s3: Offset position action: Front left (middle distance) _SubState
x38_s4: Offset position action: Left front (far distance) _SubState
x38_s5: End state
x39: Offset position action: left front: dash _
x39_p0: Target distance
x39_s0: Start state
x39_s1: Position action: Left front: Move
x39_s1_w0: [Move] Dash move to the target world correction position
x39_s2: Position action: Front left: Waiting for switching
x39_s3: End state
x40: Offset position action: whole left: dash _
x40_s0: Start state
x40_s1: Positioning action: Left: branch
x40_s1_e0: [Random number] Random number generation
x40_s2: Offset position action: Left (short distance) _SubState
x40_s3: Offset position action: Left (medium distance) _SubState
x40_s4: Offset position action: Left (far distance) _SubState
x40_s5: End state
x41: Offset position action: left: dash _
x41_p0: Target distance
x41_s0: Start state
x41_s1: Position action: Left: Move
x41_s1_w0: [Move] Dash move to the target world correction position
x41_s2: Position action: Left: Switching waiting
x41_s3: End state
x42: Offset position action: forward whole: dash _
x42_s0: Start state
x42_s1: Position action: Forward: branch
x42_s1_e0: [Random number] Random number generation
x42_s2: Offset position action: Forward (short distance) _SubState
x42_s3: Offset position action: Forward (medium distance) _SubState
x42_s4: Offset position action: Forward (far distance) _SubState
x42_s5: End state
x43: Offset position action: forward: dash _
x43_p0: Target distance
x43_s0: Start state
x43_s1: Position action: Forward: Move
x43_s1_w0: [Move] Lock horizontal movement to the target world correction position
x43_s1_w1: [Move] Dash move to the target world correction position
x43_s2: Position action: Forward: Waiting for switching
x43_s3: End state
x44: OBJ vandalism
x44_p0: Action type_attack action
x44_s0: Start state
x44_s1: OBJ Destruction Action: Start
x44_s2: OBJ destruction behavior: attack behavior
x44_s2_w0: [Attack] Melee attack
x44_s3: OBJ destruction behavior: waiting
x44_s4: End state
x45: OBJ avoidance move
x45_s0: Start state
x45_s1: Normal movement: start
x45_s2: Normal movement: Navigation search
x45_s2_e0: [Search] Navimesh
x45_s3: Normal movement: alignment
x45_s3_w0: [Move] Normal move Navi mesh
x45_s3_w1: [Move] Normal move Navi mesh
x45_s3_w2: [Move] Normal move Navi mesh
x45_s3_w3: [Move] Normal move Navi mesh
x45_s4: Normal movement: Navigation successful movement
x45_s4_w0: [Move] Horizontal move_Navimesh
x45_s4_w1: [Move] Dash_Navimesh
x45_s5: Normal movement: Navigation failure movement
x45_s5_w0: [Move] Horizontal move_random
x45_s5_w1: [Move] Horizontal move_Lock_Random
x45_s6: Normal movement: End
x45_s7: Normal move: Cancel
x45_s7_e0: [Move] Reset move failure
x45_s8: End state
x0: [LIB] Generator action (lower)
x0_s0: Start state
x0_s1: Generator action: start
x0_s2: Generator action: branch
x0_s3: Generator Behavior: Generator Navimesh
x0_s3_e0: [Search] Navi mesh to generator
x0_s4: Generator Behavior: Player Behavior
x0_s4_w0: [Move] Horizontal move_Lock_Navimesh
x0_s5: Generator behavior: normal behavior
x0_s5_w0: [Move] Normal move Navi mesh
x0_s6: Generator action: end
x0_s7: Come here if you can't make a return route
x0_s8: [LIB] OBJ operation_SubState
x0_s9: End state
x1: [LIB] Target existence: invisibility (random walking)
x1_p0: Non-combat action: Combat type
x1_p1: Random movement type
x1_s0: Start state
x1_s1: Invisibility (with baldness): start
x1_s2: Invisible (with baldness): Standby
x1_s3: Invisibility (with spine): Move
x1_s3_w0: [Move] Normal move random
x1_s3_w1: [Move] Horizontal move_random
x1_s4: Invisibility (with spine): End
x1_s5: Invisibility (with target): Non-combat action
x1_s5_w0: [Attack] Melee attack
x1_s6: Invisibility (with target): Waiting for non-combat action
x1_s7: End state
x2: [LIB] Targetless action (random walking)
x2_p0: Non-combat action: Combat type
x2_p1: Random movement type
x2_s0: Start state
x2_s1: Action without target: start
x2_s2: Action without target: Standby
x2_s2_e0: [Move] Reset move failure
x2_s3: Targetless action: return
x2_s3_e0: [General purpose] Sharing flag setting
x2_s4: Action without target: Move
x2_s4_w0: [Move] Normal move random
x2_s4_w1: [Move] Horizontal move_random
x2_s5: Targetless action: Non-combat action
x2_s5_w0: [Attack] Melee attack
x2_s6: Targetless action: Waiting for non-combat action
x2_s7: End state
x3: [LIB] Lower action: branch
x3_s0: Start state
x3_s1: Action: Branch
x3_s2: End state_Target action
x3_s3: End state_Target inactivity
x3_s4: End state_generator action
x3_s5: End state_Lower stop action
x3_s6: End state_Invisible action
x3_s7: End state_vanishing action
x3_s8: End state_Sound reaction action
x4: [LIB] Lower action: Stop action
x4_s0: Start state
x4_s1: Lower stop action: start
x4_s2: Lower stopping action: Stopping
x4_s3: End state
x5: [LIB] Damage action: General purpose
x5_p0: Argument for immediate counterattack determination
x5_s0: Start state
x5_s1: Damage action: start
x5_s2: Damage action: Damage waiting
x5_s3: Damage action: End
x5_s3_e0: [Attack] Damage information reset
x5_s3_e1: [General] Logic group flag setting
x5_s4: Damage action: Wait for 2 seconds
x5_s4_w0: [Move] Normal move random
x5_s5: End state
x6: [LIB] Long distance action: dash
x6_s0: Start state
x6_s1: Dash: Start
x6_s1_e0: [Move] Reset move failure
x6_s1_e1: [Random number] Random number generation
x6_s1_e2: [General] Logic group flag setting
x6_s2: Dash: starting error
x6_s2_w0: [Move] Lock move random
x6_s3: Dash: slow
x6_s3_w0: [Move] Dash_Lock_Random
x6_s4: Dash: fast
x6_s4_w0: [Move] Dash_Lock_Random
x6_s5: Dash: Success: End state
x6_s6: Dash: Failure: End state
x7: [LIB] Long-distance action: Leader follow
x7_s0: Start state
x7_s1: Follow the Leader: Start
x7_s1_e0: [Move] Reset move failure
x7_s2: Follow the leader: wait
x7_s3: Leader Follow: Follow: High Speed
x7_s3_w0: [Move] Follow the offset position from the group leader
x7_s3_w1: [Move] Follow the offset position from the group leader
x7_s4: Leader Follow: Follow: Slow
x7_s4_w0: [Move] Follow the offset position from the group leader
x7_s4_w1: [Move] Follow the offset position from the group leader
x7_s5: Follow the leader: branch
x7_s5_e0: [Random number] Random number generation
x7_s6: End state
x8: [LIB] Long distance action: Navi mesh dash
x8_s0: Start state
x8_s1: Navimesh: Start
x8_s1_e0: [Move] Reset move failure
x8_s1_e1: [Random number] Random number generation
x8_s1_e2: [General] Logic group flag setting
x8_s2: Navimesh: Search
x8_s2_e0: [Search] Navimesh
x8_s3: Navimesh: Alignment
x8_s3_w0: [Move] Normal move Navi mesh
x8_s4: Navimesh: Dash movement: Slow
x8_s4_w0: [Move] Dash_Navimesh
x8_s5: Navimesh: Dash movement: High speed
x8_s5_w0: [Move] Dash_Navimesh
x8_s6: [LIB] OBJ operation_SubState
x8_s7: Navimesh: Failure: End state
x8_s8: Navimesh: Success: End state
x9: [LIB] Long distance action
x9_s0: Start state
x9_s1: Long-distance action: start
x9_s1_e0: [Move] Reset move failure
x9_s1_e1: [Timer] Start timer
x9_s1_e2: [Random number] Random number generation
x9_s2: Long-distance action: branch
x9_s3: [LIB] Long-distance action: Dash_SubState
x9_s4: [LIB] Long distance action: Navi mesh dash _SubState
x9_s5: [LIB] Long-distance action: Leader following_SubState
x9_s6: Long-distance action: Normal: End state
x9_s7: Long Range Action: Attack: End State
x10: [LIB] Short distance action
x10_s0: Start state
x10_s1: Short range action: start
x10_s1_e0: [Move] Reset move failure
x10_s1_e1: [Timer] Start timer
x10_s1_e2: [Random number] Random number generation
x10_s2: Short-distance action: branch
x10_s2_e0: [Random number] Random number generation
x10_s3: [LIB] Short distance action: Offset walking_SubState
x10_s4: [LIB] Short distance action: Navi mesh walking _SubState
x10_s5: [LIB] Short distance action: Dash_SubState
x10_s6: New Short Distance: Normal: End State
x10_s7: New Short Range: Attack: End State
x11: [LIB] Short distance action: Offset walking
x11_s0: Start state
x11_s1: Offset action: start
x11_s1_e0: [Move] Reset move failure
x11_s1_e1: [Timer] Start timer
x11_s1_e2: [Random number] Random number generation
x11_s2: Offset action: branch
x11_s2_e0: [Random number] Random number generation
x11_s3: Offset action: retreat
x11_s3_w0: [Move] Horizontal move_Lock_Random
x11_s4: Offset action: short distance
x11_s4_w0: [Move] Lock horizontally to the target correction position
x11_s5: Offset action: medium distance
x11_s5_w0: [Move] Lock horizontally to the target correction position
x11_s6: Offset action: long distance
x11_s6_w0: [Move] Lock horizontally to the target correction position
x11_s7: Offset action: Success: End state
x11_s8: Offset action: Failure: End state
x12: [LIB] Short distance action: Navi mesh walking
x12_s0: Start state
x12_s1: Navimesh: Start
x12_s1_e0: [Move] Reset move failure
x12_s1_e1: [Random number] Random number generation
x12_s2: Navimesh: Search
x12_s2_e0: [Search] Navimesh
x12_s3: Navimesh: Alignment
x12_s3_w0: [Move] Normal move Navi mesh
x12_s4: Navimesh: Walking movement: Low speed
x12_s4_w0: [Move] Lock move Navi mesh
x12_s5: Navimesh: Walking movement: High speed
x12_s5_w0: [Move] Lock move Navi mesh
x12_s6: [LIB] OBJ operation_SubState
x12_s7: Navimesh: Failure: End state
x12_s8: Navimesh: Success: End state
x13: [LIB] Short-range action: dash
x13_s0: Start state
x13_s1: Dash: Start
x13_s1_e0: [Move] Reset move failure
x13_s1_e1: [Random number] Random number generation
x13_s2: Dash: slow
x13_s2_w0: [Move] Dash_Lock_Random
x13_s3: Dash: fast
x13_s3_w0: [Move] Dash_Lock_Random
x13_s4: Dash: Success: End state
x13_s5: Dash: Failure: End state
x14: [LIB] Attacking behavior: walking
x14_s0: Start state
x14_s1: Walking: low speed
x14_s1_w0: [Move] Lock move random
x14_s2: Walk: Start
x14_s2_e0: [Move] Reset move failure
x14_s2_e1: [Random number] Random number generation
x14_s3: Walking: branch
x14_s4: Walking: high speed
x14_s4_w0: [Move] Lock move random
x14_s5: Walk: Failure: End state
x15: [LIB] Attacking behavior: walking & waiting
x15_s0: Start state
x15_s1: Walking & waiting: waiting
x15_s1_e0: [Random number] Random number generation
x15_s2: Walking & waiting: walking: low speed
x15_s2_w0: [Move] Lock move random
x15_s3: Walk & Wait: Start
x15_s3_e0: [Move] Reset move failure
x15_s3_e1: [Random number] Random number generation
x15_s4: Walking & Waiting: Branch
x15_s5: Walking & Waiting: Walking: High Speed
x15_s5_w0: [Move] Lock move random
x15_s6: Walking & Waiting: Failure: End State
x16: [LIB] Attack action: Dash
x16_s0: Start state
x16_s1: Dash: on the move
x16_s1_w0: [Move] Dash_Lock_Random
x16_s2: Dash: Start
x16_s2_e0: [Move] Reset move failure
x16_s3: Dash: branch
x16_s4: Dash: Failure: End state
x17: [LIB] Interaction
x17_p0: Minimum action time
x17_p1: Maximum action time
x17_s0: Start state
x17_s1: Close Action: Start
x17_s1_e0: [Move] Reset move failure
x17_s1_e1: [Timer] Start timer
x17_s1_e2: [Random number] Random number generation
x17_s1_e3: [Random number] Random number generation
x17_s2: Close action: branch
x17_s3: [LIB] Interim action: Walking retreat_SubState
x17_s4: [LIB] Interaction: Walking left / right turning _SubState
x17_s5: Close Action: Normal: End State
x17_s6: Close Action: Attack: End State
x18: [LIB] Offset behavior
x18_s0: Start state
x18_s1: Offset action: start
x18_s1_e0: [Move] Reset move failure
x18_s1_e1: [Random number] Random number generation
x18_s1_e2: [Random number] Random number generation
x18_s1_e3: [Timer] Start timer
x18_s1_e4: [Random number] Random number generation
x18_s2: Offset action: end (normal end)
x18_s2_e0: [General] Logic group flag setting
x18_s2_e1: [General] Logic group flag setting
x18_s2_e2: [General] Logic group flag setting
x18_s2_e3: [General] Logic group flag setting
x18_s2_e4: [General] Logic group flag setting
x18_s2_e5: [General] Logic group flag setting
x18_s2_e6: [General] Logic group flag setting
x18_s2_e7: [General] Logic group flag setting
x18_s3: Offset action: front (close)
x18_s3_e0: [General] Logic group flag setting
x18_s3_w0: [Move] Lock horizontally to the target correction position
x18_s4: Offset action: branch
x18_s5: Offset action: backward (close)
x18_s5_e0: [General] Logic group flag setting
x18_s5_w0: [Move] Lock horizontally to the target correction position
x18_s6: Offset action: left (near)
x18_s6_e0: [General] Logic group flag setting
x18_s6_w0: [Move] Lock horizontally to the target correction position
x18_s7: Offset action: Right (near)
x18_s7_e0: [General] Logic group flag setting
x18_s7_w0: [Move] Lock horizontally to the target correction position
x18_s8: Offset action: front left (near)
x18_s8_e0: [General] Logic group flag setting
x18_s8_w0: [Move] Lock horizontally to the target correction position
x18_s9: Offset action: right front (near)
x18_s9_e0: [General] Logic group flag setting
x18_s9_w0: [Move] Lock horizontally to the target correction position
x18_s10: Offset action: rear left (close)
x18_s10_e0: [General] Logic group flag setting
x18_s10_w0: [Move] Lock horizontally to the target correction position
x18_s11: Offset action: right rear (near)
x18_s11_e0: [General] Logic group flag setting
x18_s11_w0: [Move] Lock horizontally to the target correction position
x18_s12: Offset action: Move in place
x18_s12_w0: [Move] Horizontal move_Lock_Random
x18_s13: Offset action: end (forced end)
x18_s13_e0: [General] Logic group flag setting
x18_s13_e1: [General] Logic group flag setting
x18_s13_e2: [General] Logic group flag setting
x18_s13_e3: [General] Logic group flag setting
x18_s13_e4: [General] Logic group flag setting
x18_s13_e5: [General] Logic group flag setting
x18_s13_e6: [General] Logic group flag setting
x18_s13_e7: [General] Logic group flag setting
x18_s14: End state_Normal end
x18_s15: End state_forced attack
x19: [LIB] Immediate action: walking retreat
x19_s0: Start state
x19_s1: Walking retreat: start
x19_s1_e0: [Move] Reset move failure
x19_s1_e1: [Random number] Random number generation
x19_s2: Walking retreat: Retreat: Danger zone
x19_s2_w0: [Move] Horizontal move_Lock_Random
x19_s3: Walking retraction: Retraction: Safety area
x19_s3_w0: [Move] Horizontal move_Lock_Random
x19_s4: Walking retreat: Normal: End state
x19_s5: Walking retreat: Failure: End state
x20: [LIB] Interaction: Walking left and right turning
x20_s0: Start state
x20_s1: Left and right turn: start
x20_s1_e0: [Move] Reset move failure
x20_s1_e1: [Timer] Start timer
x20_s1_e2: [Random number] Random number generation
x20_s1_e3: [Random number] Random number generation
x20_s2: Walking retraction: left and right turning: left: short distance
x20_s2_w0: [Move] Horizontal move_Lock_Random
x20_s3: Walking retraction: left and right turning: right: short distance
x20_s3_w0: [Move] Horizontal move_Lock_Random
x20_s4: Walking retraction: left and right turning: left: far distance
x20_s4_w0: [Move] Horizontal move_Lock_Random
x20_s5: Left and right turn: branch
x20_s6: Walking retreat: left and right turn: right: far distance
x20_s6_w0: [Move] Horizontal move_Lock_Random
x20_s7: Left / Right turn: Normal: End state
x20_s8: Left / Right turn: Failure: End state
x21: [Abolished] Attack: H: Step_Wait_Da
x21_p0: Attack type
x21_p1: Range distance
x21_p2: Attack time
x21_s0: Start state
x21_s1: Begin attack
x21_s1_e0: [Move] Reset move failure
x21_s1_e1: [Attack] Reset attack failure
x21_s1_e2: [Timer] Start timer
x21_s1_e3: [Random number] Random number generation
x21_s1_e4: [General] Logic group flag setting
x21_s1_e5: [Attack] Defense
x21_s2: Attack: Under attack
x21_s2_w0: [Attack] Melee attack
x21_s3: Attack: Standby
x21_s4: Attack: Cancel
x21_s4_e0: [Attack] Attack cancel
x21_s5: Attack: Cancel wait
x21_s6: Attack action: Direction adjustment
x21_s6_w0: [Move] Lock move random
x21_s7: Attack: Branch
x21_s8: Attack: Successful end processing
x21_s8_e0: [General] Logic group flag setting
x21_s9: Attack: Failure end processing
x21_s9_e0: [General] Logic group flag setting
x21_s10: [LIB] Attack action: Walking_SubState
x21_s11: [LIB] Attack action: walking & waiting _SubState
x21_s12: [LIB] Attack action: Dash _SubState
x21_s13: Attack successful end state
x21_s14: Attack failed end state
x22: [LIB] OBJ operation
x22_s0: Start state
x22_s1: OBJ operation: start
x22_s2: OBJ operation: branch
x22_s2_w0: [Action] Use OBJ
x22_s3: OBJ operation: Other than ladder
x22_s4: OBJ operation: ladder
x22_s5: OBJ operation: climb the ladder
x22_s5_w0: [Action] Climbing the ladder
x22_s6: OBJ operation: Get off the ladder
x22_s6_w0: [Action] Go down the ladder
x22_s7: OBJ operation: Normal termination
x22_s7_e0: [Action] Leave OBJ
x22_s8: OBJ operation: Failed end
x22_s9: OBJ operation: Get off the ladder (preparation)
x22_s9_w0: [Action] Go down the ladder
x22_s10: OBJ operation: climbing a ladder (preparation)
x22_s10_w0: [Action] Climbing the ladder
x22_s11: OBJ use success state
x22_s12: OBJ use failure state
